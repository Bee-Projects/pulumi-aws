// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Domain extends lumi.NamedResource implements DomainArgs {
    public readonly accessPolicies: string;
    public readonly advancedOptions: {[key: string]: any};
    public /*out*/ readonly arn: string;
    public readonly clusterConfig: { dedicatedMasterCount?: number, dedicatedMasterEnabled?: boolean, dedicatedMasterType?: string, instanceCount?: number, instanceType?: string, zoneAwarenessEnabled?: boolean }[];
    public /*out*/ readonly domainId: string;
    public readonly domainName: string;
    public readonly ebsOptions: { ebsEnabled: boolean, iops?: number, volumeSize?: number, volumeType: string }[];
    public readonly elasticsearchVersion?: string;
    public /*out*/ readonly endpoint: string;
    public readonly snapshotOptions?: { automatedSnapshotStartHour: number }[];
    public readonly tags?: {[key: string]: any};

    constructor(name: string, args: DomainArgs) {
        super(name);
        this.accessPolicies = args.accessPolicies;
        this.advancedOptions = args.advancedOptions;
        this.clusterConfig = args.clusterConfig;
        if (lumirt.defaultIfComputed(args.domainName, "") === undefined) {
            throw new Error("Property argument 'domainName' is required, but was missing");
        }
        this.domainName = args.domainName;
        this.ebsOptions = args.ebsOptions;
        this.elasticsearchVersion = args.elasticsearchVersion;
        this.snapshotOptions = args.snapshotOptions;
        this.tags = args.tags;
    }
}

export interface DomainArgs {
    readonly accessPolicies?: string;
    readonly advancedOptions?: {[key: string]: any};
    readonly clusterConfig?: { dedicatedMasterCount?: number, dedicatedMasterEnabled?: boolean, dedicatedMasterType?: string, instanceCount?: number, instanceType?: string, zoneAwarenessEnabled?: boolean }[];
    readonly domainName: string;
    readonly ebsOptions?: { ebsEnabled: boolean, iops?: number, volumeSize?: number, volumeType: string }[];
    readonly elasticsearchVersion?: string;
    readonly snapshotOptions?: { automatedSnapshotStartHour: number }[];
    readonly tags?: {[key: string]: any};
}

