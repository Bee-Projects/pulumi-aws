// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Domain extends fabric.Resource {
    public readonly accessPolicies: fabric.Property<string>;
    public readonly advancedOptions: fabric.Property<{[key: string]: any}>;
    public /*out*/ readonly arn: fabric.Property<string>;
    public readonly clusterConfig: fabric.Property<{ dedicatedMasterCount?: number, dedicatedMasterEnabled?: boolean, dedicatedMasterType?: string, instanceCount?: number, instanceType?: string, zoneAwarenessEnabled?: boolean }[]>;
    public /*out*/ readonly domainId: fabric.Property<string>;
    public readonly domainName: fabric.Property<string>;
    public readonly ebsOptions: fabric.Property<{ ebsEnabled: boolean, iops?: number, volumeSize?: number, volumeType: string }[]>;
    public readonly elasticsearchVersion?: fabric.Property<string>;
    public /*out*/ readonly endpoint: fabric.Property<string>;
    public readonly snapshotOptions?: fabric.Property<{ automatedSnapshotStartHour: number }[]>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;

    constructor(urnName: string, args: DomainArgs) {
        if (args.domainName === undefined) {
            throw new Error("Missing required property 'domainName'");
        }
        super("aws:elasticsearch/domain:Domain", urnName, {
            "accessPolicies": args.accessPolicies,
            "advancedOptions": args.advancedOptions,
            "clusterConfig": args.clusterConfig,
            "domainName": args.domainName,
            "ebsOptions": args.ebsOptions,
            "elasticsearchVersion": args.elasticsearchVersion,
            "snapshotOptions": args.snapshotOptions,
            "tags": args.tags,
        });
    }
}

export interface DomainArgs {
    readonly accessPolicies?: fabric.PropertyValue<string>;
    readonly advancedOptions?: fabric.PropertyValue<{[key: string]: any}>;
    readonly clusterConfig?: fabric.PropertyValue<{ dedicatedMasterCount?: fabric.PropertyValue<number>, dedicatedMasterEnabled?: fabric.PropertyValue<boolean>, dedicatedMasterType?: fabric.PropertyValue<string>, instanceCount?: fabric.PropertyValue<number>, instanceType?: fabric.PropertyValue<string>, zoneAwarenessEnabled?: fabric.PropertyValue<boolean> }>[];
    readonly domainName: fabric.PropertyValue<string>;
    readonly ebsOptions?: fabric.PropertyValue<{ ebsEnabled: fabric.PropertyValue<boolean>, iops?: fabric.PropertyValue<number>, volumeSize?: fabric.PropertyValue<number>, volumeType?: fabric.PropertyValue<string> }>[];
    readonly elasticsearchVersion?: fabric.PropertyValue<string>;
    readonly snapshotOptions?: fabric.PropertyValue<{ automatedSnapshotStartHour: fabric.PropertyValue<number> }>[];
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
}

