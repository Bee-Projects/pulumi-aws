// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class RepositoryPolicy extends lumi.NamedResource implements RepositoryPolicyArgs {
    public readonly policy: string;
    public /*out*/ readonly registryId: string;
    public readonly repository: string;

    constructor(name: string, args: RepositoryPolicyArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.policy, "") === undefined) {
            throw new Error("Property argument 'policy' is required, but was missing");
        }
        this.policy = args.policy;
        if (lumirt.defaultIfComputed(args.repository, "") === undefined) {
            throw new Error("Property argument 'repository' is required, but was missing");
        }
        this.repository = args.repository;
    }
}

export interface RepositoryPolicyArgs {
    readonly policy: string;
    readonly repository: string;
}

