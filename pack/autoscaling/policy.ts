// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Policy extends fabric.Resource {
    public readonly adjustmentType: fabric.Computed<string>;
    public /*out*/ readonly arn: fabric.Computed<string>;
    public readonly autoscalingGroupName: fabric.Computed<string>;
    public readonly cooldown?: fabric.Computed<number>;
    public readonly estimatedInstanceWarmup?: fabric.Computed<number>;
    public readonly metricAggregationType: fabric.Computed<string>;
    public readonly minAdjustmentMagnitude?: fabric.Computed<number>;
    public readonly minAdjustmentStep?: fabric.Computed<number>;
    public readonly name: fabric.Computed<string>;
    public readonly policyType?: fabric.Computed<string>;
    public readonly scalingAdjustment?: fabric.Computed<number>;
    public readonly stepAdjustment?: fabric.Computed<{ metricIntervalLowerBound?: string, metricIntervalUpperBound?: string, scalingAdjustment: number }[]>;

    constructor(urnName: string, args: PolicyArgs, dependsOn?: fabric.Resource[]) {
        if (args.adjustmentType === undefined) {
            throw new Error("Missing required property 'adjustmentType'");
        }
        if (args.autoscalingGroupName === undefined) {
            throw new Error("Missing required property 'autoscalingGroupName'");
        }
        super("aws:autoscaling/policy:Policy", urnName, {
            "adjustmentType": args.adjustmentType,
            "autoscalingGroupName": args.autoscalingGroupName,
            "cooldown": args.cooldown,
            "estimatedInstanceWarmup": args.estimatedInstanceWarmup,
            "metricAggregationType": args.metricAggregationType,
            "minAdjustmentMagnitude": args.minAdjustmentMagnitude,
            "minAdjustmentStep": args.minAdjustmentStep,
            "name": args.name,
            "policyType": args.policyType,
            "scalingAdjustment": args.scalingAdjustment,
            "stepAdjustment": args.stepAdjustment,
            "arn": undefined,
        }, dependsOn);
    }
}

export interface PolicyArgs {
    readonly adjustmentType: fabric.MaybeComputed<string>;
    readonly autoscalingGroupName: fabric.MaybeComputed<string>;
    readonly cooldown?: fabric.MaybeComputed<number>;
    readonly estimatedInstanceWarmup?: fabric.MaybeComputed<number>;
    readonly metricAggregationType?: fabric.MaybeComputed<string>;
    readonly minAdjustmentMagnitude?: fabric.MaybeComputed<number>;
    readonly minAdjustmentStep?: fabric.MaybeComputed<number>;
    readonly name?: fabric.MaybeComputed<string>;
    readonly policyType?: fabric.MaybeComputed<string>;
    readonly scalingAdjustment?: fabric.MaybeComputed<number>;
    readonly stepAdjustment?: fabric.MaybeComputed<{ metricIntervalLowerBound?: fabric.MaybeComputed<string>, metricIntervalUpperBound?: fabric.MaybeComputed<string>, scalingAdjustment: fabric.MaybeComputed<number> }>[];
}

