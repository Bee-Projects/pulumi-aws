// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Notification extends lumi.NamedResource implements NotificationArgs {
    public readonly groupNames: string[];
    public readonly notifications: string[];
    public readonly topicArn: string;

    public static get(id: lumi.ID): Notification {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): Notification[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: NotificationArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.groupNames, "") === undefined) {
            throw new Error("Property argument 'groupNames' is required, but was missing");
        }
        this.groupNames = <any>args.groupNames;
        if (lumirt.defaultIfComputed(args.notifications, "") === undefined) {
            throw new Error("Property argument 'notifications' is required, but was missing");
        }
        this.notifications = <any>args.notifications;
        if (lumirt.defaultIfComputed(args.topicArn, "") === undefined) {
            throw new Error("Property argument 'topicArn' is required, but was missing");
        }
        this.topicArn = <any>args.topicArn;
    }
}

export interface NotificationArgs {
    readonly groupNames: string[];
    readonly notifications: string[];
    readonly topicArn: string;
}

