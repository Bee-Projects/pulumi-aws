// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

import {RestApi} from "./restApi";

export class RequestValidator extends lumi.NamedResource implements RequestValidatorArgs {
    public readonly requestValidatorName?: string;
    public readonly restApi: RestApi;
    public readonly validateRequestBody?: boolean;
    public readonly validateRequestParameters?: boolean;

    public static get(id: lumi.ID): RequestValidator {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): RequestValidator[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: RequestValidatorArgs) {
        super(name);
        this.requestValidatorName = args.requestValidatorName;
        if (lumirt.defaultIfComputed(args.restApi, "") === undefined) {
            throw new Error("Property argument 'restApi' is required, but was missing");
        }
        this.restApi = args.restApi;
        this.validateRequestBody = args.validateRequestBody;
        this.validateRequestParameters = args.validateRequestParameters;
    }
}

export interface RequestValidatorArgs {
    readonly requestValidatorName?: string;
    readonly restApi: RestApi;
    readonly validateRequestBody?: boolean;
    readonly validateRequestParameters?: boolean;
}

