// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class MethodSettings extends lumi.NamedResource implements MethodSettingsArgs {
    public readonly methodPath: string;
    public readonly restApiId: string;
    public readonly settings: { cacheDataEncrypted?: boolean, cacheTtlInSeconds?: number, cachingEnabled?: boolean, dataTraceEnabled?: boolean, loggingLevel?: string, metricsEnabled?: boolean, requireAuthorizationForCacheControl?: boolean, throttlingBurstLimit?: number, throttlingRateLimit?: number, unauthorizedCacheControlHeaderStrategy?: string }[];
    public readonly stageName: string;

    constructor(name: string, args: MethodSettingsArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.methodPath, "") === undefined) {
            throw new Error("Property argument 'methodPath' is required, but was missing");
        }
        this.methodPath = args.methodPath;
        if (lumirt.defaultIfComputed(args.restApiId, "") === undefined) {
            throw new Error("Property argument 'restApiId' is required, but was missing");
        }
        this.restApiId = args.restApiId;
        if (lumirt.defaultIfComputed(args.settings, "") === undefined) {
            throw new Error("Property argument 'settings' is required, but was missing");
        }
        this.settings = args.settings;
        if (lumirt.defaultIfComputed(args.stageName, "") === undefined) {
            throw new Error("Property argument 'stageName' is required, but was missing");
        }
        this.stageName = args.stageName;
    }
}

export interface MethodSettingsArgs {
    readonly methodPath: string;
    readonly restApiId: string;
    readonly settings: { cacheDataEncrypted?: boolean, cacheTtlInSeconds?: number, cachingEnabled?: boolean, dataTraceEnabled?: boolean, loggingLevel?: string, metricsEnabled?: boolean, requireAuthorizationForCacheControl?: boolean, throttlingBurstLimit?: number, throttlingRateLimit?: number, unauthorizedCacheControlHeaderStrategy?: string }[];
    readonly stageName: string;
}

