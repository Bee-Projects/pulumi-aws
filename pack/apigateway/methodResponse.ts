// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

import {RestApi} from "./restApi";

export class MethodResponse extends lumi.NamedResource implements MethodResponseArgs {
    public readonly httpMethod: string;
    public readonly resourceId: string;
    public readonly responseModels?: {[key: string]: string};
    public readonly responseParameters?: {[key: string]: boolean};
    public readonly responseParametersInJson?: string;
    public readonly restApi: RestApi;
    public readonly statusCode: string;

    constructor(name: string, args: MethodResponseArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.httpMethod, "") === undefined) {
            throw new Error("Property argument 'httpMethod' is required, but was missing");
        }
        this.httpMethod = args.httpMethod;
        if (lumirt.defaultIfComputed(args.resourceId, "") === undefined) {
            throw new Error("Property argument 'resourceId' is required, but was missing");
        }
        this.resourceId = args.resourceId;
        this.responseModels = args.responseModels;
        this.responseParameters = args.responseParameters;
        this.responseParametersInJson = args.responseParametersInJson;
        if (lumirt.defaultIfComputed(args.restApi, "") === undefined) {
            throw new Error("Property argument 'restApi' is required, but was missing");
        }
        this.restApi = args.restApi;
        if (lumirt.defaultIfComputed(args.statusCode, "") === undefined) {
            throw new Error("Property argument 'statusCode' is required, but was missing");
        }
        this.statusCode = args.statusCode;
    }
}

export interface MethodResponseArgs {
    readonly httpMethod: string;
    readonly resourceId: string;
    readonly responseModels?: {[key: string]: string};
    readonly responseParameters?: {[key: string]: boolean};
    readonly responseParametersInJson?: string;
    readonly restApi: RestApi;
    readonly statusCode: string;
}

