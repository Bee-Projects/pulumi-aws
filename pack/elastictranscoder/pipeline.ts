// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Pipeline extends lumi.NamedResource implements PipelineArgs {
    public /*out*/ readonly arn: string;
    public readonly awsKmsKeyArn?: string;
    public readonly contentConfig: { bucket: string, storageClass?: string }[];
    public readonly contentConfigPermissions?: { access?: string[], grantee?: string, granteeType?: string }[];
    public readonly inputBucket: string;
    public readonly pipelineName: string;
    public readonly notifications?: { completed?: string, error?: string, progressing?: string, warning?: string }[];
    public readonly outputBucket: string;
    public readonly role: string;
    public readonly thumbnailConfig: { bucket: string, storageClass?: string }[];
    public readonly thumbnailConfigPermissions?: { access?: string[], grantee?: string, granteeType?: string }[];

    constructor(name: string, args: PipelineArgs) {
        super(name);
        this.awsKmsKeyArn = args.awsKmsKeyArn;
        this.contentConfig = args.contentConfig;
        this.contentConfigPermissions = args.contentConfigPermissions;
        if (lumirt.defaultIfComputed(args.inputBucket, "") === undefined) {
            throw new Error("Property argument 'inputBucket' is required, but was missing");
        }
        this.inputBucket = args.inputBucket;
        this.pipelineName = args.pipelineName;
        this.notifications = args.notifications;
        this.outputBucket = args.outputBucket;
        if (lumirt.defaultIfComputed(args.role, "") === undefined) {
            throw new Error("Property argument 'role' is required, but was missing");
        }
        this.role = args.role;
        this.thumbnailConfig = args.thumbnailConfig;
        this.thumbnailConfigPermissions = args.thumbnailConfigPermissions;
    }
}

export interface PipelineArgs {
    readonly awsKmsKeyArn?: string;
    readonly contentConfig?: { bucket: string, storageClass?: string }[];
    readonly contentConfigPermissions?: { access?: string[], grantee?: string, granteeType?: string }[];
    readonly inputBucket: string;
    readonly pipelineName?: string;
    readonly notifications?: { completed?: string, error?: string, progressing?: string, warning?: string }[];
    readonly outputBucket?: string;
    readonly role: string;
    readonly thumbnailConfig?: { bucket: string, storageClass?: string }[];
    readonly thumbnailConfigPermissions?: { access?: string[], grantee?: string, granteeType?: string }[];
}

