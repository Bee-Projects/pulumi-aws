// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Creates a AWS Batch compute environment. Compute environments contain the Amazon ECS container instances that are used to run containerized batch jobs.
 * 
 * For information about AWS Batch, see [What is AWS Batch?][1] .
 * For information about compute environment, see [Compute Environments][2] .
 */
export class ComputeEnvironment extends pulumi.Resource {
    /**
     * The Amazon Resource Name (ARN) of the compute environment.
     */
    public /*out*/ readonly arn: pulumi.Computed<string>;
    /**
     * The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed.
     */
    public readonly computeEnvironmentName: pulumi.Computed<string>;
    /**
     * Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
     */
    public readonly computeResources?: pulumi.Computed<{ bidPercentage?: number, desiredVcpus?: number, ec2KeyPair?: string, imageId?: string, instanceRole: string, instanceType: string[], maxVcpus: number, minVcpus: number, securityGroupIds: string[], spotIamFleetRole?: string, subnets: string[], tags?: {[key: string]: any}, type: string }[]>;
    /**
     * The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
     */
    public /*out*/ readonly eccClusterArn: pulumi.Computed<string>;
    /**
     * The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
     */
    public readonly serviceRole: pulumi.Computed<string>;
    /**
     * The state of the compute environment. If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
     */
    public readonly state?: pulumi.Computed<string>;
    /**
     * The current status of the compute environment (for example, CREATING or VALID).
     */
    public /*out*/ readonly status: pulumi.Computed<string>;
    /**
     * A short, human-readable string to provide additional details about the current status of the compute environment.
     */
    public /*out*/ readonly statusReason: pulumi.Computed<string>;
    /**
     * The type of compute environment. Valid items are `EC2` or `SPOT`.
     */
    public readonly type: pulumi.Computed<string>;

    /**
     * Create a ComputeEnvironment resource with the given unique name, arguments and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this ComputeEnvironment instance
     * @param args A collection of arguments for creating this ComputeEnvironment intance
     * @param dependsOn A optional array of additional resources this intance depends on
     */
    constructor(urnName: string, args: ComputeEnvironmentArgs, dependsOn?: pulumi.Resource[]) {
        if (args.computeEnvironmentName === undefined) {
            throw new Error("Missing required property 'computeEnvironmentName'");
        }
        if (args.serviceRole === undefined) {
            throw new Error("Missing required property 'serviceRole'");
        }
        if (args.type === undefined) {
            throw new Error("Missing required property 'type'");
        }
        super("aws:batch/computeEnvironment:ComputeEnvironment", urnName, {
            "computeEnvironmentName": args.computeEnvironmentName,
            "computeResources": args.computeResources,
            "serviceRole": args.serviceRole,
            "state": args.state,
            "type": args.type,
            "arn": undefined,
            "eccClusterArn": undefined,
            "status": undefined,
            "statusReason": undefined,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a ComputeEnvironment resource.
 */
export interface ComputeEnvironmentArgs {
    /**
     * The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed.
     */
    readonly computeEnvironmentName: pulumi.ComputedValue<string>;
    /**
     * Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
     */
    readonly computeResources?: pulumi.ComputedValue<{ bidPercentage?: pulumi.ComputedValue<number>, desiredVcpus?: pulumi.ComputedValue<number>, ec2KeyPair?: pulumi.ComputedValue<string>, imageId?: pulumi.ComputedValue<string>, instanceRole: pulumi.ComputedValue<string>, instanceType: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], maxVcpus: pulumi.ComputedValue<number>, minVcpus: pulumi.ComputedValue<number>, securityGroupIds: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], spotIamFleetRole?: pulumi.ComputedValue<string>, subnets: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], tags?: pulumi.ComputedValue<{[key: string]: any}>, type: pulumi.ComputedValue<string> }>[];
    /**
     * The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
     */
    readonly serviceRole: pulumi.ComputedValue<string>;
    /**
     * The state of the compute environment. If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
     */
    readonly state?: pulumi.ComputedValue<string>;
    /**
     * The type of compute environment. Valid items are `EC2` or `SPOT`.
     */
    readonly type: pulumi.ComputedValue<string>;
}

