// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Instance extends fabric.Resource {
    public /*out*/ readonly address: fabric.Property<string>;
    public readonly allocatedStorage: fabric.Property<number>;
    public readonly allowMajorVersionUpgrade?: fabric.Property<boolean>;
    public readonly applyImmediately: fabric.Property<boolean>;
    public /*out*/ readonly arn: fabric.Property<string>;
    public readonly autoMinorVersionUpgrade?: fabric.Property<boolean>;
    public readonly availabilityZone: fabric.Property<string>;
    public readonly backupRetentionPeriod: fabric.Property<number>;
    public readonly backupWindow: fabric.Property<string>;
    public readonly characterSetName: fabric.Property<string>;
    public readonly copyTagsToSnapshot?: fabric.Property<boolean>;
    public readonly dbSubnetGroupName: fabric.Property<string>;
    public /*out*/ readonly endpoint: fabric.Property<string>;
    public readonly engine: fabric.Property<string>;
    public readonly engineVersion: fabric.Property<string>;
    public readonly finalSnapshotIdentifier?: fabric.Property<string>;
    public /*out*/ readonly hostedZoneId: fabric.Property<string>;
    public readonly iamDatabaseAuthenticationEnabled?: fabric.Property<boolean>;
    public readonly identifier: fabric.Property<string>;
    public readonly identifierPrefix: fabric.Property<string>;
    public readonly instanceClass: fabric.Property<string>;
    public readonly iops?: fabric.Property<number>;
    public readonly kmsKeyId: fabric.Property<string>;
    public readonly licenseModel: fabric.Property<string>;
    public readonly maintenanceWindow: fabric.Property<string>;
    public readonly monitoringInterval?: fabric.Property<number>;
    public readonly monitoringRoleArn: fabric.Property<string>;
    public readonly multiAz: fabric.Property<boolean>;
    public readonly name: fabric.Property<string>;
    public readonly optionGroupName: fabric.Property<string>;
    public readonly parameterGroupName: fabric.Property<string>;
    public readonly password?: fabric.Property<string>;
    public readonly port: fabric.Property<number>;
    public readonly publiclyAccessible?: fabric.Property<boolean>;
    public /*out*/ readonly replicas: fabric.Property<string[]>;
    public readonly replicateSourceDb?: fabric.Property<string>;
    public /*out*/ readonly resourceId: fabric.Property<string>;
    public readonly securityGroupNames?: fabric.Property<string[]>;
    public readonly skipFinalSnapshot?: fabric.Property<boolean>;
    public readonly snapshotIdentifier?: fabric.Property<string>;
    public /*out*/ readonly status: fabric.Property<string>;
    public readonly storageEncrypted?: fabric.Property<boolean>;
    public readonly storageType: fabric.Property<string>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;
    public readonly timezone: fabric.Property<string>;
    public readonly username: fabric.Property<string>;
    public readonly vpcSecurityGroupIds: fabric.Property<string[]>;

    constructor(urnName: string, args: InstanceArgs) {
        if (args.instanceClass === undefined) {
            throw new Error("Missing required property 'instanceClass'");
        }
        super("aws:rds/instance:Instance", urnName, {
            "allocatedStorage": args.allocatedStorage,
            "allowMajorVersionUpgrade": args.allowMajorVersionUpgrade,
            "applyImmediately": args.applyImmediately,
            "autoMinorVersionUpgrade": args.autoMinorVersionUpgrade,
            "availabilityZone": args.availabilityZone,
            "backupRetentionPeriod": args.backupRetentionPeriod,
            "backupWindow": args.backupWindow,
            "characterSetName": args.characterSetName,
            "copyTagsToSnapshot": args.copyTagsToSnapshot,
            "dbSubnetGroupName": args.dbSubnetGroupName,
            "engine": args.engine,
            "engineVersion": args.engineVersion,
            "finalSnapshotIdentifier": args.finalSnapshotIdentifier,
            "iamDatabaseAuthenticationEnabled": args.iamDatabaseAuthenticationEnabled,
            "identifier": args.identifier,
            "identifierPrefix": args.identifierPrefix,
            "instanceClass": args.instanceClass,
            "iops": args.iops,
            "kmsKeyId": args.kmsKeyId,
            "licenseModel": args.licenseModel,
            "maintenanceWindow": args.maintenanceWindow,
            "monitoringInterval": args.monitoringInterval,
            "monitoringRoleArn": args.monitoringRoleArn,
            "multiAz": args.multiAz,
            "name": args.name,
            "optionGroupName": args.optionGroupName,
            "parameterGroupName": args.parameterGroupName,
            "password": args.password,
            "port": args.port,
            "publiclyAccessible": args.publiclyAccessible,
            "replicateSourceDb": args.replicateSourceDb,
            "securityGroupNames": args.securityGroupNames,
            "skipFinalSnapshot": args.skipFinalSnapshot,
            "snapshotIdentifier": args.snapshotIdentifier,
            "storageEncrypted": args.storageEncrypted,
            "storageType": args.storageType,
            "tags": args.tags,
            "timezone": args.timezone,
            "username": args.username,
            "vpcSecurityGroupIds": args.vpcSecurityGroupIds,
        });
    }
}

export interface InstanceArgs {
    readonly allocatedStorage?: fabric.PropertyValue<number>;
    readonly allowMajorVersionUpgrade?: fabric.PropertyValue<boolean>;
    readonly applyImmediately?: fabric.PropertyValue<boolean>;
    readonly autoMinorVersionUpgrade?: fabric.PropertyValue<boolean>;
    readonly availabilityZone?: fabric.PropertyValue<string>;
    readonly backupRetentionPeriod?: fabric.PropertyValue<number>;
    readonly backupWindow?: fabric.PropertyValue<string>;
    readonly characterSetName?: fabric.PropertyValue<string>;
    readonly copyTagsToSnapshot?: fabric.PropertyValue<boolean>;
    readonly dbSubnetGroupName?: fabric.PropertyValue<string>;
    readonly engine?: fabric.PropertyValue<string>;
    readonly engineVersion?: fabric.PropertyValue<string>;
    readonly finalSnapshotIdentifier?: fabric.PropertyValue<string>;
    readonly iamDatabaseAuthenticationEnabled?: fabric.PropertyValue<boolean>;
    readonly identifier?: fabric.PropertyValue<string>;
    readonly identifierPrefix?: fabric.PropertyValue<string>;
    readonly instanceClass: fabric.PropertyValue<string>;
    readonly iops?: fabric.PropertyValue<number>;
    readonly kmsKeyId?: fabric.PropertyValue<string>;
    readonly licenseModel?: fabric.PropertyValue<string>;
    readonly maintenanceWindow?: fabric.PropertyValue<string>;
    readonly monitoringInterval?: fabric.PropertyValue<number>;
    readonly monitoringRoleArn?: fabric.PropertyValue<string>;
    readonly multiAz?: fabric.PropertyValue<boolean>;
    readonly name?: fabric.PropertyValue<string>;
    readonly optionGroupName?: fabric.PropertyValue<string>;
    readonly parameterGroupName?: fabric.PropertyValue<string>;
    readonly password?: fabric.PropertyValue<string>;
    readonly port?: fabric.PropertyValue<number>;
    readonly publiclyAccessible?: fabric.PropertyValue<boolean>;
    readonly replicateSourceDb?: fabric.PropertyValue<string>;
    readonly securityGroupNames?: fabric.PropertyValue<fabric.PropertyValue<string>>[];
    readonly skipFinalSnapshot?: fabric.PropertyValue<boolean>;
    readonly snapshotIdentifier?: fabric.PropertyValue<string>;
    readonly storageEncrypted?: fabric.PropertyValue<boolean>;
    readonly storageType?: fabric.PropertyValue<string>;
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
    readonly timezone?: fabric.PropertyValue<string>;
    readonly username?: fabric.PropertyValue<string>;
    readonly vpcSecurityGroupIds?: fabric.PropertyValue<fabric.PropertyValue<string>>[];
}

