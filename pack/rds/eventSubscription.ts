// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class EventSubscription extends lumi.NamedResource implements EventSubscriptionArgs {
    public /*out*/ readonly customerAwsId: string;
    public readonly enabled?: boolean;
    public readonly eventCategories?: string[];
    public readonly eventSubscriptionName?: string;
    public readonly snsTopic: string;
    public readonly sourceIds?: string[];
    public readonly sourceType?: string;
    public readonly tags?: {[key: string]: any};

    constructor(name: string, args: EventSubscriptionArgs) {
        super(name);
        this.enabled = args.enabled;
        this.eventCategories = args.eventCategories;
        this.eventSubscriptionName = args.eventSubscriptionName;
        if (lumirt.defaultIfComputed(args.snsTopic, "") === undefined) {
            throw new Error("Property argument 'snsTopic' is required, but was missing");
        }
        this.snsTopic = args.snsTopic;
        this.sourceIds = args.sourceIds;
        this.sourceType = args.sourceType;
        this.tags = args.tags;
    }
}

export interface EventSubscriptionArgs {
    readonly enabled?: boolean;
    readonly eventCategories?: string[];
    readonly eventSubscriptionName?: string;
    readonly snsTopic: string;
    readonly sourceIds?: string[];
    readonly sourceType?: string;
    readonly tags?: {[key: string]: any};
}

