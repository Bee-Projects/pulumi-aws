// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class ParameterGroup extends lumi.NamedResource implements ParameterGroupArgs {
    public /*out*/ readonly arn: string;
    public readonly description?: string;
    public readonly family: string;
    public readonly parameterGroupName: string;
    public readonly namePrefix: string;
    public readonly parameter?: { applyMethod?: string, name: string, value: string }[];
    public readonly tags?: {[key: string]: any};

    public static get(id: lumi.ID): ParameterGroup {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): ParameterGroup[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: ParameterGroupArgs) {
        super(name);
        this.description = <any>args.description;
        if (lumirt.defaultIfComputed(args.family, "") === undefined) {
            throw new Error("Property argument 'family' is required, but was missing");
        }
        this.family = <any>args.family;
        this.parameterGroupName = <any>args.parameterGroupName;
        this.namePrefix = <any>args.namePrefix;
        this.parameter = <any>args.parameter;
        this.tags = <any>args.tags;
    }
}

export interface ParameterGroupArgs {
    readonly description?: string;
    readonly family: string;
    readonly parameterGroupName?: string;
    readonly namePrefix?: string;
    readonly parameter?: { applyMethod?: string, name: string, value: string }[];
    readonly tags?: {[key: string]: any};
}

