// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class AccountPasswordPolicy extends lumi.NamedResource implements AccountPasswordPolicyArgs {
    public readonly allowUsersToChangePassword?: boolean;
    public /*out*/ readonly expirePasswords: boolean;
    public readonly hardExpiry: boolean;
    public readonly maxPasswordAge: number;
    public readonly minimumPasswordLength?: number;
    public readonly passwordReusePrevention: number;
    public readonly requireLowercaseCharacters: boolean;
    public readonly requireNumbers: boolean;
    public readonly requireSymbols: boolean;
    public readonly requireUppercaseCharacters: boolean;

    constructor(name: string, args: AccountPasswordPolicyArgs) {
        super(name);
        this.allowUsersToChangePassword = args.allowUsersToChangePassword;
        this.hardExpiry = args.hardExpiry;
        this.maxPasswordAge = args.maxPasswordAge;
        this.minimumPasswordLength = args.minimumPasswordLength;
        this.passwordReusePrevention = args.passwordReusePrevention;
        this.requireLowercaseCharacters = args.requireLowercaseCharacters;
        this.requireNumbers = args.requireNumbers;
        this.requireSymbols = args.requireSymbols;
        this.requireUppercaseCharacters = args.requireUppercaseCharacters;
    }
}

export interface AccountPasswordPolicyArgs {
    readonly allowUsersToChangePassword?: boolean;
    readonly hardExpiry?: boolean;
    readonly maxPasswordAge?: number;
    readonly minimumPasswordLength?: number;
    readonly passwordReusePrevention?: number;
    readonly requireLowercaseCharacters?: boolean;
    readonly requireNumbers?: boolean;
    readonly requireSymbols?: boolean;
    readonly requireUppercaseCharacters?: boolean;
}

