// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class GroupMembership extends lumi.NamedResource implements GroupMembershipArgs {
    public readonly group: string;
    public readonly groupMembershipName: string;
    public readonly users: string[];

    public static get(id: lumi.ID): GroupMembership {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): GroupMembership[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: GroupMembershipArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.group, "") === undefined) {
            throw new Error("Property argument 'group' is required, but was missing");
        }
        this.group = <any>args.group;
        this.groupMembershipName = <any>args.groupMembershipName;
        if (lumirt.defaultIfComputed(args.users, "") === undefined) {
            throw new Error("Property argument 'users' is required, but was missing");
        }
        this.users = <any>args.users;
    }
}

export interface GroupMembershipArgs {
    readonly group: string;
    readonly groupMembershipName?: string;
    readonly users: string[];
}

