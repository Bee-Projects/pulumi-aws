// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class OpenIdConnectProvider extends lumi.NamedResource implements OpenIdConnectProviderArgs {
    public /*out*/ readonly arn: string;
    public readonly clientIdList: string[];
    public readonly thumbprintList: string[];
    public readonly url: string;

    public static get(id: lumi.ID): OpenIdConnectProvider {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): OpenIdConnectProvider[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: OpenIdConnectProviderArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.clientIdList, "") === undefined) {
            throw new Error("Property argument 'clientIdList' is required, but was missing");
        }
        this.clientIdList = <any>args.clientIdList;
        if (lumirt.defaultIfComputed(args.thumbprintList, "") === undefined) {
            throw new Error("Property argument 'thumbprintList' is required, but was missing");
        }
        this.thumbprintList = <any>args.thumbprintList;
        if (lumirt.defaultIfComputed(args.url, "") === undefined) {
            throw new Error("Property argument 'url' is required, but was missing");
        }
        this.url = <any>args.url;
    }
}

export interface OpenIdConnectProviderArgs {
    readonly clientIdList: string[];
    readonly thumbprintList: string[];
    readonly url: string;
}

