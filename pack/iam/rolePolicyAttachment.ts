// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

import {ARN} from "../index";
import {Role} from "./role";

export class RolePolicyAttachment extends lumi.NamedResource implements RolePolicyAttachmentArgs {
    public readonly policyArn: ARN;
    public readonly role: Role;

    public static get(id: lumi.ID): RolePolicyAttachment {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): RolePolicyAttachment[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: RolePolicyAttachmentArgs) {
        super(urnName);
        if (lumirt.defaultIfComputed(args.policyArn, "") === undefined) {
            throw new Error("Property argument 'policyArn' is required, but was missing");
        }
        this.policyArn = <any>args.policyArn;
        if (lumirt.defaultIfComputed(args.role, "") === undefined) {
            throw new Error("Property argument 'role' is required, but was missing");
        }
        this.role = <any>args.role;
    }
}

export interface RolePolicyAttachmentArgs {
    readonly policyArn: ARN;
    readonly role: Role;
}

