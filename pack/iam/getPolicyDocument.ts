// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Generates an IAM policy document in JSON format.
 * 
 * This is a data source which can be used to construct a JSON representation of
 * an IAM policy document, for use with resources which expect policy documents,
 * such as the `aws_iam_policy` resource.
 * 
 * ```hcl
 * data "aws_iam_policy_document" "example" {
 *   statement {
 *     sid = "1"
 * 
 *     actions = [
 *       "s3:ListAllMyBuckets",
 *       "s3:GetBucketLocation",
 *     ]
 * 
 *     resources = [
 *       "arn:aws:s3:::*",
 *     ]
 *   }
 * 
 *   statement {
 *     actions = [
 *       "s3:ListBucket",
 *     ]
 * 
 *     resources = [
 *       "arn:aws:s3:::${var.s3_bucket_name}",
 *     ]
 * 
 *     condition {
 *       test     = "StringLike"
 *       variable = "s3:prefix"
 * 
 *       values = [
 *         "",
 *         "home/",
 *         "home/&{aws:username}/",
 *       ]
 *     }
 *   }
 * 
 *   statement {
 *     actions = [
 *       "s3:*",
 *     ]
 * 
 *     resources = [
 *       "arn:aws:s3:::${var.s3_bucket_name}/home/&{aws:username}",
 *       "arn:aws:s3:::${var.s3_bucket_name}/home/&{aws:username}/*",
 *     ]
 *   }
 * }
 * 
 * resource "aws_iam_policy" "example" {
 *   name   = "example_policy"
 *   path   = "/"
 *   policy = "${data.aws_iam_policy_document.example.json}"
 * }
 * ```
 * 
 * Using this data source to generate policy documents is *optional*. It is also
 * valid to use literal JSON strings within your configuration, or to use the
 * `file` interpolation function to read a raw JSON policy document from a file.
 */
export function getPolicyDocument(args: GetPolicyDocumentArgs): Promise<GetPolicyDocumentResult> {
    return pulumi.runtime.invoke("aws:iam/getPolicyDocument:getPolicyDocument", {
        "policyId": args.policyId,
        "statement": args.statement,
    });
}

/**
 * A collection of arguments for invoking getPolicyDocument.
 */
export interface GetPolicyDocumentArgs {
    /**
     * An ID for the policy document.
     */
    policyId?: pulumi.ComputedValue<string>;
    /**
     * A nested configuration block (described below)
     * configuring one *statement* to be included in the policy document.
     */
    statement: pulumi.ComputedValue<{ actions?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], condition?: pulumi.ComputedValue<{ test: pulumi.ComputedValue<string>, values: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], variable: pulumi.ComputedValue<string> }>[], effect?: pulumi.ComputedValue<string>, notActions?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], notPrincipals?: pulumi.ComputedValue<{ identifiers: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], type: pulumi.ComputedValue<string> }>[], notResources?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], principals?: pulumi.ComputedValue<{ identifiers: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], type: pulumi.ComputedValue<string> }>[], resources?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[], sid?: pulumi.ComputedValue<string> }>[];
}

/**
 * A collection of values returned by getPolicyDocument.
 */
export interface GetPolicyDocumentResult {
    /**
     * The above arguments serialized as a standard JSON policy document.
     */
    json: string;
}

