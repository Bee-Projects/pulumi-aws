// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class UserLoginProfile extends lumi.NamedResource implements UserLoginProfileArgs {
    public /*out*/ readonly encryptedPassword: string;
    public /*out*/ readonly keyFingerprint: string;
    public readonly passwordLength?: number;
    public readonly passwordResetRequired?: boolean;
    public readonly pgpKey: string;
    public readonly user: string;

    public static get(id: lumi.ID): UserLoginProfile {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): UserLoginProfile[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: UserLoginProfileArgs) {
        super(urnName);
        this.passwordLength = <any>args.passwordLength;
        this.passwordResetRequired = <any>args.passwordResetRequired;
        if (lumirt.defaultIfComputed(args.pgpKey, "") === undefined) {
            throw new Error("Property argument 'pgpKey' is required, but was missing");
        }
        this.pgpKey = <any>args.pgpKey;
        if (lumirt.defaultIfComputed(args.user, "") === undefined) {
            throw new Error("Property argument 'user' is required, but was missing");
        }
        this.user = <any>args.user;
    }
}

export interface UserLoginProfileArgs {
    readonly passwordLength?: number;
    readonly passwordResetRequired?: boolean;
    readonly pgpKey: string;
    readonly user: string;
}

