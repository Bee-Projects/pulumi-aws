// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

import {ARN} from "../index";
import {Group} from "./group";
import {Role} from "./role";
import {User} from "./user";

export class PolicyAttachment extends lumi.NamedResource implements PolicyAttachmentArgs {
    public readonly groups?: Group[];
    public readonly name: string;
    public readonly policyArn: ARN;
    public readonly roles?: Role[];
    public readonly users?: User[];

    public static get(id: lumi.ID): PolicyAttachment {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): PolicyAttachment[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: PolicyAttachmentArgs) {
        super(urnName);
        this.groups = <any>args.groups;
        this.name = <any>args.name;
        if (lumirt.defaultIfComputed(args.policyArn, "") === undefined) {
            throw new Error("Property argument 'policyArn' is required, but was missing");
        }
        this.policyArn = <any>args.policyArn;
        this.roles = <any>args.roles;
        this.users = <any>args.users;
    }
}

export interface PolicyAttachmentArgs {
    readonly groups?: Group[];
    readonly name?: string;
    readonly policyArn: ARN;
    readonly roles?: Role[];
    readonly users?: User[];
}

