// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Policy extends lumi.NamedResource implements PolicyArgs {
    public /*out*/ readonly arn: string;
    public readonly description?: string;
    public readonly name: string;
    public readonly namePrefix?: string;
    public readonly path?: string;
    public readonly policy: string;

    public static get(id: lumi.ID): Policy {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): Policy[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: PolicyArgs) {
        super(urnName);
        this.description = <any>args.description;
        this.name = <any>args.name;
        this.namePrefix = <any>args.namePrefix;
        this.path = <any>args.path;
        if (lumirt.defaultIfComputed(args.policy, "") === undefined) {
            throw new Error("Property argument 'policy' is required, but was missing");
        }
        this.policy = <any>args.policy;
    }
}

export interface PolicyArgs {
    readonly description?: string;
    readonly name?: string;
    readonly namePrefix?: string;
    readonly path?: string;
    readonly policy: string;
}

