// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Instance extends fabric.Resource {
    public readonly agentVersion?: fabric.Computed<string>;
    public readonly amiId: fabric.Computed<string>;
    public readonly architecture?: fabric.Computed<string>;
    public readonly autoScalingType?: fabric.Computed<string>;
    public readonly availabilityZone: fabric.Computed<string>;
    public readonly createdAt: fabric.Computed<string>;
    public readonly deleteEbs?: fabric.Computed<boolean>;
    public readonly deleteEip?: fabric.Computed<boolean>;
    public readonly ebsBlockDevice: fabric.Computed<{ deleteOnTermination?: boolean, deviceName: string, iops: number, snapshotId: string, volumeSize: number, volumeType: string }[]>;
    public readonly ebsOptimized?: fabric.Computed<boolean>;
    public readonly ec2InstanceId: fabric.Computed<string>;
    public readonly ecsClusterArn: fabric.Computed<string>;
    public readonly elasticIp: fabric.Computed<string>;
    public readonly ephemeralBlockDevice: fabric.Computed<{ deviceName: string, virtualName: string }[]>;
    public readonly hostname: fabric.Computed<string>;
    public /*out*/ readonly instanceId: fabric.Computed<string>;
    public readonly infrastructureClass: fabric.Computed<string>;
    public readonly installUpdatesOnBoot?: fabric.Computed<boolean>;
    public readonly instanceProfileArn: fabric.Computed<string>;
    public readonly instanceType?: fabric.Computed<string>;
    public readonly lastServiceErrorId: fabric.Computed<string>;
    public readonly layerIds: fabric.Computed<string[]>;
    public readonly os: fabric.Computed<string>;
    public readonly platform: fabric.Computed<string>;
    public readonly privateDns: fabric.Computed<string>;
    public readonly privateIp: fabric.Computed<string>;
    public readonly publicDns: fabric.Computed<string>;
    public readonly publicIp: fabric.Computed<string>;
    public readonly registeredBy: fabric.Computed<string>;
    public readonly reportedAgentVersion: fabric.Computed<string>;
    public readonly reportedOsFamily: fabric.Computed<string>;
    public readonly reportedOsName: fabric.Computed<string>;
    public readonly reportedOsVersion: fabric.Computed<string>;
    public readonly rootBlockDevice: fabric.Computed<{ deleteOnTermination?: boolean, iops: number, volumeSize: number, volumeType: string }[]>;
    public readonly rootDeviceType: fabric.Computed<string>;
    public readonly rootDeviceVolumeId: fabric.Computed<string>;
    public readonly securityGroupIds: fabric.Computed<string[]>;
    public readonly sshHostDsaKeyFingerprint: fabric.Computed<string>;
    public readonly sshHostRsaKeyFingerprint: fabric.Computed<string>;
    public readonly sshKeyName: fabric.Computed<string>;
    public readonly stackId: fabric.Computed<string>;
    public readonly state?: fabric.Computed<string>;
    public readonly status: fabric.Computed<string>;
    public readonly subnetId: fabric.Computed<string>;
    public readonly tenancy: fabric.Computed<string>;
    public readonly virtualizationType: fabric.Computed<string>;

    constructor(urnName: string, args: InstanceArgs) {
        if (args.layerIds === undefined) {
            throw new Error("Missing required property 'layerIds'");
        }
        if (args.stackId === undefined) {
            throw new Error("Missing required property 'stackId'");
        }
        super("aws:opsworks/instance:Instance", urnName, {
            "agentVersion": args.agentVersion,
            "amiId": args.amiId,
            "architecture": args.architecture,
            "autoScalingType": args.autoScalingType,
            "availabilityZone": args.availabilityZone,
            "createdAt": args.createdAt,
            "deleteEbs": args.deleteEbs,
            "deleteEip": args.deleteEip,
            "ebsBlockDevice": args.ebsBlockDevice,
            "ebsOptimized": args.ebsOptimized,
            "ec2InstanceId": args.ec2InstanceId,
            "ecsClusterArn": args.ecsClusterArn,
            "elasticIp": args.elasticIp,
            "ephemeralBlockDevice": args.ephemeralBlockDevice,
            "hostname": args.hostname,
            "infrastructureClass": args.infrastructureClass,
            "installUpdatesOnBoot": args.installUpdatesOnBoot,
            "instanceProfileArn": args.instanceProfileArn,
            "instanceType": args.instanceType,
            "lastServiceErrorId": args.lastServiceErrorId,
            "layerIds": args.layerIds,
            "os": args.os,
            "platform": args.platform,
            "privateDns": args.privateDns,
            "privateIp": args.privateIp,
            "publicDns": args.publicDns,
            "publicIp": args.publicIp,
            "registeredBy": args.registeredBy,
            "reportedAgentVersion": args.reportedAgentVersion,
            "reportedOsFamily": args.reportedOsFamily,
            "reportedOsName": args.reportedOsName,
            "reportedOsVersion": args.reportedOsVersion,
            "rootBlockDevice": args.rootBlockDevice,
            "rootDeviceType": args.rootDeviceType,
            "rootDeviceVolumeId": args.rootDeviceVolumeId,
            "securityGroupIds": args.securityGroupIds,
            "sshHostDsaKeyFingerprint": args.sshHostDsaKeyFingerprint,
            "sshHostRsaKeyFingerprint": args.sshHostRsaKeyFingerprint,
            "sshKeyName": args.sshKeyName,
            "stackId": args.stackId,
            "state": args.state,
            "status": args.status,
            "subnetId": args.subnetId,
            "tenancy": args.tenancy,
            "virtualizationType": args.virtualizationType,
            "instanceId": undefined,
        });
    }
}

export interface InstanceArgs {
    readonly agentVersion?: fabric.MaybeComputed<string>;
    readonly amiId?: fabric.MaybeComputed<string>;
    readonly architecture?: fabric.MaybeComputed<string>;
    readonly autoScalingType?: fabric.MaybeComputed<string>;
    readonly availabilityZone?: fabric.MaybeComputed<string>;
    readonly createdAt?: fabric.MaybeComputed<string>;
    readonly deleteEbs?: fabric.MaybeComputed<boolean>;
    readonly deleteEip?: fabric.MaybeComputed<boolean>;
    readonly ebsBlockDevice?: fabric.MaybeComputed<{ deleteOnTermination?: fabric.MaybeComputed<boolean>, deviceName: fabric.MaybeComputed<string>, iops?: fabric.MaybeComputed<number>, snapshotId?: fabric.MaybeComputed<string>, volumeSize?: fabric.MaybeComputed<number>, volumeType?: fabric.MaybeComputed<string> }>[];
    readonly ebsOptimized?: fabric.MaybeComputed<boolean>;
    readonly ec2InstanceId?: fabric.MaybeComputed<string>;
    readonly ecsClusterArn?: fabric.MaybeComputed<string>;
    readonly elasticIp?: fabric.MaybeComputed<string>;
    readonly ephemeralBlockDevice?: fabric.MaybeComputed<{ deviceName: fabric.MaybeComputed<string>, virtualName: fabric.MaybeComputed<string> }>[];
    readonly hostname?: fabric.MaybeComputed<string>;
    readonly infrastructureClass?: fabric.MaybeComputed<string>;
    readonly installUpdatesOnBoot?: fabric.MaybeComputed<boolean>;
    readonly instanceProfileArn?: fabric.MaybeComputed<string>;
    readonly instanceType?: fabric.MaybeComputed<string>;
    readonly lastServiceErrorId?: fabric.MaybeComputed<string>;
    readonly layerIds: fabric.MaybeComputed<fabric.MaybeComputed<string>>[];
    readonly os?: fabric.MaybeComputed<string>;
    readonly platform?: fabric.MaybeComputed<string>;
    readonly privateDns?: fabric.MaybeComputed<string>;
    readonly privateIp?: fabric.MaybeComputed<string>;
    readonly publicDns?: fabric.MaybeComputed<string>;
    readonly publicIp?: fabric.MaybeComputed<string>;
    readonly registeredBy?: fabric.MaybeComputed<string>;
    readonly reportedAgentVersion?: fabric.MaybeComputed<string>;
    readonly reportedOsFamily?: fabric.MaybeComputed<string>;
    readonly reportedOsName?: fabric.MaybeComputed<string>;
    readonly reportedOsVersion?: fabric.MaybeComputed<string>;
    readonly rootBlockDevice?: fabric.MaybeComputed<{ deleteOnTermination?: fabric.MaybeComputed<boolean>, iops?: fabric.MaybeComputed<number>, volumeSize?: fabric.MaybeComputed<number>, volumeType?: fabric.MaybeComputed<string> }>[];
    readonly rootDeviceType?: fabric.MaybeComputed<string>;
    readonly rootDeviceVolumeId?: fabric.MaybeComputed<string>;
    readonly securityGroupIds?: fabric.MaybeComputed<fabric.MaybeComputed<string>>[];
    readonly sshHostDsaKeyFingerprint?: fabric.MaybeComputed<string>;
    readonly sshHostRsaKeyFingerprint?: fabric.MaybeComputed<string>;
    readonly sshKeyName?: fabric.MaybeComputed<string>;
    readonly stackId: fabric.MaybeComputed<string>;
    readonly state?: fabric.MaybeComputed<string>;
    readonly status?: fabric.MaybeComputed<string>;
    readonly subnetId?: fabric.MaybeComputed<string>;
    readonly tenancy?: fabric.MaybeComputed<string>;
    readonly virtualizationType?: fabric.MaybeComputed<string>;
}

