// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class TaskDefinition extends fabric.Resource {
    public /*out*/ readonly arn: fabric.Computed<string>;
    public readonly containerDefinitions: fabric.Computed<string>;
    public readonly family: fabric.Computed<string>;
    public readonly networkMode: fabric.Computed<string>;
    public readonly placementConstraints?: fabric.Computed<{ expression?: string, type: string }[]>;
    public /*out*/ readonly revision: fabric.Computed<number>;
    public readonly taskRoleArn?: fabric.Computed<string>;
    public readonly volume?: fabric.Computed<{ hostPath?: string, name: string }[]>;

    constructor(urnName: string, args: TaskDefinitionArgs, dependsOn?: fabric.Resource[]) {
        if (args.containerDefinitions === undefined) {
            throw new Error("Missing required property 'containerDefinitions'");
        }
        if (args.family === undefined) {
            throw new Error("Missing required property 'family'");
        }
        super("aws:ecs/taskDefinition:TaskDefinition", urnName, {
            "containerDefinitions": args.containerDefinitions,
            "family": args.family,
            "networkMode": args.networkMode,
            "placementConstraints": args.placementConstraints,
            "taskRoleArn": args.taskRoleArn,
            "volume": args.volume,
            "arn": undefined,
            "revision": undefined,
        }, dependsOn);
    }
}

export interface TaskDefinitionArgs {
    readonly containerDefinitions: fabric.MaybeComputed<string>;
    readonly family: fabric.MaybeComputed<string>;
    readonly networkMode?: fabric.MaybeComputed<string>;
    readonly placementConstraints?: fabric.MaybeComputed<{ expression?: fabric.MaybeComputed<string>, type: fabric.MaybeComputed<string> }>[];
    readonly taskRoleArn?: fabric.MaybeComputed<string>;
    readonly volume?: fabric.MaybeComputed<{ hostPath?: fabric.MaybeComputed<string>, name: fabric.MaybeComputed<string> }>[];
}

