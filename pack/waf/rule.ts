// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Rule extends lumi.NamedResource implements RuleArgs {
    public readonly metricName: string;
    public readonly name: string;
    public readonly predicates?: { dataId?: string, negated: boolean, type: string }[];

    public static get(id: lumi.ID): Rule {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): Rule[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: RuleArgs) {
        super(urnName);
        if (lumirt.defaultIfComputed(args.metricName, "") === undefined) {
            throw new Error("Property argument 'metricName' is required, but was missing");
        }
        this.metricName = <any>args.metricName;
        this.name = <any>args.name;
        this.predicates = <any>args.predicates;
    }
}

export interface RuleArgs {
    readonly metricName: string;
    readonly name?: string;
    readonly predicates?: { dataId?: string, negated: boolean, type: string }[];
}

