// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class AssessmentTemplate extends lumi.NamedResource implements AssessmentTemplateArgs {
    public /*out*/ readonly arn: string;
    public readonly duration: number;
    public readonly assessmentTemplateName: string;
    public readonly rulesPackageArns: string[];
    public readonly targetArn: string;

    public static get(id: lumi.ID): AssessmentTemplate {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): AssessmentTemplate[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: AssessmentTemplateArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.duration, "") === undefined) {
            throw new Error("Property argument 'duration' is required, but was missing");
        }
        this.duration = <any>args.duration;
        this.assessmentTemplateName = <any>args.assessmentTemplateName;
        if (lumirt.defaultIfComputed(args.rulesPackageArns, "") === undefined) {
            throw new Error("Property argument 'rulesPackageArns' is required, but was missing");
        }
        this.rulesPackageArns = <any>args.rulesPackageArns;
        if (lumirt.defaultIfComputed(args.targetArn, "") === undefined) {
            throw new Error("Property argument 'targetArn' is required, but was missing");
        }
        this.targetArn = <any>args.targetArn;
    }
}

export interface AssessmentTemplateArgs {
    readonly duration: number;
    readonly assessmentTemplateName?: string;
    readonly rulesPackageArns: string[];
    readonly targetArn: string;
}

