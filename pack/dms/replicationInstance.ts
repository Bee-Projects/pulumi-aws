// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class ReplicationInstance extends fabric.Resource {
    public readonly allocatedStorage: fabric.Property<number>;
    public readonly applyImmediately?: fabric.Property<boolean>;
    public readonly autoMinorVersionUpgrade: fabric.Property<boolean>;
    public readonly availabilityZone: fabric.Property<string>;
    public readonly engineVersion: fabric.Property<string>;
    public readonly kmsKeyArn: fabric.Property<string>;
    public readonly multiAz: fabric.Property<boolean>;
    public readonly preferredMaintenanceWindow: fabric.Property<string>;
    public readonly publiclyAccessible: fabric.Property<boolean>;
    public /*out*/ readonly replicationInstanceArn: fabric.Property<string>;
    public readonly replicationInstanceClass: fabric.Property<string>;
    public readonly replicationInstanceId: fabric.Property<string>;
    public /*out*/ readonly replicationInstancePrivateIps: fabric.Property<string[]>;
    public /*out*/ readonly replicationInstancePublicIps: fabric.Property<string[]>;
    public readonly replicationSubnetGroupId: fabric.Property<string>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;
    public readonly vpcSecurityGroupIds: fabric.Property<string[]>;

    constructor(urnName: string, args: ReplicationInstanceArgs) {
        if (args.replicationInstanceClass === undefined) {
            throw new Error("Missing required property 'replicationInstanceClass'");
        }
        if (args.replicationInstanceId === undefined) {
            throw new Error("Missing required property 'replicationInstanceId'");
        }
        super("aws:dms/replicationInstance:ReplicationInstance", urnName, {
            "allocatedStorage": args.allocatedStorage,
            "applyImmediately": args.applyImmediately,
            "autoMinorVersionUpgrade": args.autoMinorVersionUpgrade,
            "availabilityZone": args.availabilityZone,
            "engineVersion": args.engineVersion,
            "kmsKeyArn": args.kmsKeyArn,
            "multiAz": args.multiAz,
            "preferredMaintenanceWindow": args.preferredMaintenanceWindow,
            "publiclyAccessible": args.publiclyAccessible,
            "replicationInstanceClass": args.replicationInstanceClass,
            "replicationInstanceId": args.replicationInstanceId,
            "replicationSubnetGroupId": args.replicationSubnetGroupId,
            "tags": args.tags,
            "vpcSecurityGroupIds": args.vpcSecurityGroupIds,
        });
    }
}

export interface ReplicationInstanceArgs {
    readonly allocatedStorage?: fabric.PropertyValue<number>;
    readonly applyImmediately?: fabric.PropertyValue<boolean>;
    readonly autoMinorVersionUpgrade?: fabric.PropertyValue<boolean>;
    readonly availabilityZone?: fabric.PropertyValue<string>;
    readonly engineVersion?: fabric.PropertyValue<string>;
    readonly kmsKeyArn?: fabric.PropertyValue<string>;
    readonly multiAz?: fabric.PropertyValue<boolean>;
    readonly preferredMaintenanceWindow?: fabric.PropertyValue<string>;
    readonly publiclyAccessible?: fabric.PropertyValue<boolean>;
    readonly replicationInstanceClass: fabric.PropertyValue<string>;
    readonly replicationInstanceId: fabric.PropertyValue<string>;
    readonly replicationSubnetGroupId?: fabric.PropertyValue<string>;
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
    readonly vpcSecurityGroupIds?: fabric.PropertyValue<fabric.PropertyValue<string>>[];
}

