// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Certificate extends lumi.NamedResource implements CertificateArgs {
    public /*out*/ readonly certificateArn: string;
    public readonly certificateId: string;
    public readonly certificatePem?: string;
    public readonly certificateWallet?: string;

    public static get(id: lumi.ID): Certificate {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): Certificate[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: CertificateArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.certificateId, "") === undefined) {
            throw new Error("Property argument 'certificateId' is required, but was missing");
        }
        this.certificateId = args.certificateId;
        this.certificatePem = args.certificatePem;
        this.certificateWallet = args.certificateWallet;
    }
}

export interface CertificateArgs {
    readonly certificateId: string;
    readonly certificatePem?: string;
    readonly certificateWallet?: string;
}

