// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

import {Application} from "./application";
import {ApplicationVersion} from "./applicationVersion";

export class Environment extends fabric.Resource {
    public /*out*/ readonly allSettings: fabric.Computed<{ name: string, namespace: string, resource?: string, value: string }[]>;
    public readonly application: fabric.Computed<Application>;
    public /*out*/ readonly autoscalingGroups: fabric.Computed<string[]>;
    public /*out*/ readonly cname: fabric.Computed<string>;
    public readonly cnamePrefix: fabric.Computed<string>;
    public readonly description?: fabric.Computed<string>;
    public /*out*/ readonly instances: fabric.Computed<string[]>;
    public /*out*/ readonly launchConfigurations: fabric.Computed<string[]>;
    public /*out*/ readonly loadBalancers: fabric.Computed<string[]>;
    public readonly name: fabric.Computed<string>;
    public readonly pollInterval?: fabric.Computed<string>;
    public /*out*/ readonly queues: fabric.Computed<string[]>;
    public readonly setting?: fabric.Computed<{ name: string, namespace: string, resource?: string, value: string }[]>;
    public readonly solutionStackName: fabric.Computed<string>;
    public readonly tags?: fabric.Computed<{[key: string]: any}>;
    public readonly templateName?: fabric.Computed<string>;
    public readonly tier?: fabric.Computed<string>;
    public /*out*/ readonly triggers: fabric.Computed<string[]>;
    public readonly version: fabric.Computed<ApplicationVersion>;
    public readonly waitForReadyTimeout?: fabric.Computed<string>;

    constructor(urnName: string, args: EnvironmentArgs) {
        if (args.application === undefined) {
            throw new Error("Missing required property 'application'");
        }
        super("aws:elasticbeanstalk/environment:Environment", urnName, {
            "application": args.application,
            "cnamePrefix": args.cnamePrefix,
            "description": args.description,
            "name": args.name,
            "pollInterval": args.pollInterval,
            "setting": args.setting,
            "solutionStackName": args.solutionStackName,
            "tags": args.tags,
            "templateName": args.templateName,
            "tier": args.tier,
            "version": args.version,
            "waitForReadyTimeout": args.waitForReadyTimeout,
            "allSettings": undefined,
            "autoscalingGroups": undefined,
            "cname": undefined,
            "instances": undefined,
            "launchConfigurations": undefined,
            "loadBalancers": undefined,
            "queues": undefined,
            "triggers": undefined,
        });
    }
}

export interface EnvironmentArgs {
    readonly application: fabric.MaybeComputed<Application>;
    readonly cnamePrefix?: fabric.MaybeComputed<string>;
    readonly description?: fabric.MaybeComputed<string>;
    readonly name?: fabric.MaybeComputed<string>;
    readonly pollInterval?: fabric.MaybeComputed<string>;
    readonly setting?: fabric.MaybeComputed<{ name: fabric.MaybeComputed<string>, namespace: fabric.MaybeComputed<string>, resource?: fabric.MaybeComputed<string>, value: fabric.MaybeComputed<string> }>[];
    readonly solutionStackName?: fabric.MaybeComputed<string>;
    readonly tags?: fabric.MaybeComputed<{[key: string]: any}>;
    readonly templateName?: fabric.MaybeComputed<string>;
    readonly tier?: fabric.MaybeComputed<string>;
    readonly version?: fabric.MaybeComputed<ApplicationVersion>;
    readonly waitForReadyTimeout?: fabric.MaybeComputed<string>;
}

