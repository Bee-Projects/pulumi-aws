// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class ConfigurationTemplate extends lumi.NamedResource implements ConfigurationTemplateArgs {
    public readonly application: string;
    public readonly description?: string;
    public readonly environmentId?: string;
    public readonly configurationTemplateName?: string;
    public readonly setting: { name: string, namespace: string, resource?: string, value: string }[];
    public readonly solutionStackName?: string;

    constructor(name: string, args: ConfigurationTemplateArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.application, "") === undefined) {
            throw new Error("Property argument 'application' is required, but was missing");
        }
        this.application = args.application;
        this.description = args.description;
        this.environmentId = args.environmentId;
        this.configurationTemplateName = args.configurationTemplateName;
        this.setting = args.setting;
        this.solutionStackName = args.solutionStackName;
    }
}

export interface ConfigurationTemplateArgs {
    readonly application: string;
    readonly description?: string;
    readonly environmentId?: string;
    readonly configurationTemplateName?: string;
    readonly setting?: { name: string, namespace: string, resource?: string, value: string }[];
    readonly solutionStackName?: string;
}

