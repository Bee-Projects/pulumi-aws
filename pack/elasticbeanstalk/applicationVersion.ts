// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

import {Bucket} from "../s3/bucket";
import {Application} from "./application";

export class ApplicationVersion extends lumi.NamedResource implements ApplicationVersionArgs {
    public readonly application: Application;
    public readonly bucket: Bucket;
    public readonly description?: string;
    public readonly forceDelete?: boolean;
    public readonly key: string;
    public readonly applicationVersionName: string;

    public static get(id: lumi.ID): ApplicationVersion {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): ApplicationVersion[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: ApplicationVersionArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.application, "") === undefined) {
            throw new Error("Property argument 'application' is required, but was missing");
        }
        this.application = <any>args.application;
        if (lumirt.defaultIfComputed(args.bucket, "") === undefined) {
            throw new Error("Property argument 'bucket' is required, but was missing");
        }
        this.bucket = <any>args.bucket;
        this.description = <any>args.description;
        this.forceDelete = <any>args.forceDelete;
        if (lumirt.defaultIfComputed(args.key, "") === undefined) {
            throw new Error("Property argument 'key' is required, but was missing");
        }
        this.key = <any>args.key;
        this.applicationVersionName = <any>args.applicationVersionName;
    }
}

export interface ApplicationVersionArgs {
    readonly application: Application;
    readonly bucket: Bucket;
    readonly description?: string;
    readonly forceDelete?: boolean;
    readonly key: string;
    readonly applicationVersionName?: string;
}

