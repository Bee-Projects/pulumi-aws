// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class MaintenanceWindowTarget extends lumi.NamedResource implements MaintenanceWindowTargetArgs {
    public readonly ownerInformation?: string;
    public readonly resourceType: string;
    public readonly targets: { key: string, values: string[] }[];
    public readonly windowId: string;

    constructor(name: string, args: MaintenanceWindowTargetArgs) {
        super(name);
        this.ownerInformation = args.ownerInformation;
        if (lumirt.defaultIfComputed(args.resourceType, "") === undefined) {
            throw new Error("Property argument 'resourceType' is required, but was missing");
        }
        this.resourceType = args.resourceType;
        if (lumirt.defaultIfComputed(args.targets, "") === undefined) {
            throw new Error("Property argument 'targets' is required, but was missing");
        }
        this.targets = args.targets;
        if (lumirt.defaultIfComputed(args.windowId, "") === undefined) {
            throw new Error("Property argument 'windowId' is required, but was missing");
        }
        this.windowId = args.windowId;
    }
}

export interface MaintenanceWindowTargetArgs {
    readonly ownerInformation?: string;
    readonly resourceType: string;
    readonly targets: { key: string, values: string[] }[];
    readonly windowId: string;
}

