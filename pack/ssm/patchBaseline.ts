// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * Provides an SSM Patch Baseline resource
 * 
 * ~> **NOTE on Patch Baselines:** The `approved_patches` and `approval_rule` are 
 * both marked as optional fields, but the Patch Baseline requires that at least one
 * of them is specified.
 */
export class PatchBaseline extends pulumi.Resource {
    /**
     * A set of rules used to include patches in the baseline. up to 10 approval rules can be specified. Each approval_rule block requires the fields documented below.
     */
    public readonly approvalRule?: pulumi.Computed<{ approveAfterDays: number, complianceLevel?: string, patchFilter: { key: string, values: string[] }[] }[]>;
    /**
     * A list of explicitly approved patches for the baseline.
     */
    public readonly approvedPatches?: pulumi.Computed<string[]>;
    /**
     * Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid compliance levels include the following: `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, `UNSPECIFIED`. The default value is `UNSPECIFIED`.
     */
    public readonly approvedPatchesComplianceLevel?: pulumi.Computed<string>;
    /**
     * The description of the patch baseline.
     */
    public readonly description?: pulumi.Computed<string>;
    /**
     * A set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are `PRODUCT | CLASSIFICATION | MSRC_SEVERITY | PATCH_ID`.
     */
    public readonly globalFilter?: pulumi.Computed<{ key: string, values: string[] }[]>;
    /**
     * The name of the patch baseline.
     */
    public readonly name: pulumi.Computed<string>;
    /**
     * Defines the operating system the patch baseline applies to. Supported operating systems include `WINDOWS`, `AMAZON_LINUX`, `UBUNTU` and `REDHAT_ENTERPRISE_LINUX`. The Default value is `WINDOWS`.
     */
    public readonly operatingSystem?: pulumi.Computed<string>;
    /**
     * A list of rejected patches.
     */
    public readonly rejectedPatches?: pulumi.Computed<string[]>;

    /**
     * Create a PatchBaseline resource with the given unique name, arguments, and optional additional
     * resource dependencies.
     *
     * @param urnName A _unique_ name for this PatchBaseline instance
     * @param args A collection of arguments for creating this PatchBaseline instance
     * @param dependsOn A optional array of additional resources this instance depends on
     */
    constructor(urnName: string, args?: PatchBaselineArgs, dependsOn?: pulumi.Resource[]) {
        args = args || {};
        super("aws:ssm/patchBaseline:PatchBaseline", urnName, {
            "approvalRule": args.approvalRule,
            "approvedPatches": args.approvedPatches,
            "approvedPatchesComplianceLevel": args.approvedPatchesComplianceLevel,
            "description": args.description,
            "globalFilter": args.globalFilter,
            "name": args.name,
            "operatingSystem": args.operatingSystem,
            "rejectedPatches": args.rejectedPatches,
        }, dependsOn);
    }
}

/**
 * The set of arguments for constructing a PatchBaseline resource.
 */
export interface PatchBaselineArgs {
    /**
     * A set of rules used to include patches in the baseline. up to 10 approval rules can be specified. Each approval_rule block requires the fields documented below.
     */
    readonly approvalRule?: pulumi.ComputedValue<{ approveAfterDays: pulumi.ComputedValue<number>, complianceLevel?: pulumi.ComputedValue<string>, patchFilter: pulumi.ComputedValue<{ key: pulumi.ComputedValue<string>, values: pulumi.ComputedValue<pulumi.ComputedValue<string>>[] }>[] }>[];
    /**
     * A list of explicitly approved patches for the baseline.
     */
    readonly approvedPatches?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
    /**
     * Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid compliance levels include the following: `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, `UNSPECIFIED`. The default value is `UNSPECIFIED`.
     */
    readonly approvedPatchesComplianceLevel?: pulumi.ComputedValue<string>;
    /**
     * The description of the patch baseline.
     */
    readonly description?: pulumi.ComputedValue<string>;
    /**
     * A set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are `PRODUCT | CLASSIFICATION | MSRC_SEVERITY | PATCH_ID`.
     */
    readonly globalFilter?: pulumi.ComputedValue<{ key: pulumi.ComputedValue<string>, values: pulumi.ComputedValue<pulumi.ComputedValue<string>>[] }>[];
    /**
     * The name of the patch baseline.
     */
    readonly name?: pulumi.ComputedValue<string>;
    /**
     * Defines the operating system the patch baseline applies to. Supported operating systems include `WINDOWS`, `AMAZON_LINUX`, `UBUNTU` and `REDHAT_ENTERPRISE_LINUX`. The Default value is `WINDOWS`.
     */
    readonly operatingSystem?: pulumi.ComputedValue<string>;
    /**
     * A list of rejected patches.
     */
    readonly rejectedPatches?: pulumi.ComputedValue<pulumi.ComputedValue<string>>[];
}

