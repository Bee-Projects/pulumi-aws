// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Parameter extends lumi.NamedResource implements ParameterArgs {
    public readonly keyId?: string;
    public readonly parameterName?: string;
    public readonly overwrite?: boolean;
    public readonly type: string;
    public readonly value: string;

    constructor(name: string, args: ParameterArgs) {
        super(name);
        this.keyId = args.keyId;
        this.parameterName = args.parameterName;
        this.overwrite = args.overwrite;
        if (lumirt.defaultIfComputed(args.type, "") === undefined) {
            throw new Error("Property argument 'type' is required, but was missing");
        }
        this.type = args.type;
        if (lumirt.defaultIfComputed(args.value, "") === undefined) {
            throw new Error("Property argument 'value' is required, but was missing");
        }
        this.value = args.value;
    }
}

export interface ParameterArgs {
    readonly keyId?: string;
    readonly parameterName?: string;
    readonly overwrite?: boolean;
    readonly type: string;
    readonly value: string;
}

