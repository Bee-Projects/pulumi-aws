// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class MaintenanceWindowTask extends fabric.Resource {
    public readonly loggingInfo?: fabric.Property<{ s3BucketName: string, s3BucketPrefix?: string, s3Region: string }[]>;
    public readonly maxConcurrency: fabric.Property<string>;
    public readonly maxErrors: fabric.Property<string>;
    public readonly priority?: fabric.Property<number>;
    public readonly serviceRoleArn: fabric.Property<string>;
    public readonly targets: fabric.Property<{ key: string, values: string[] }[]>;
    public readonly taskArn: fabric.Property<string>;
    public readonly taskParameters?: fabric.Property<{ name: string, values: string[] }[]>;
    public readonly taskType: fabric.Property<string>;
    public readonly windowId: fabric.Property<string>;

    constructor(urnName: string, args: MaintenanceWindowTaskArgs) {
        if (args.maxConcurrency === undefined) {
            throw new Error("Missing required property 'maxConcurrency'");
        }
        if (args.maxErrors === undefined) {
            throw new Error("Missing required property 'maxErrors'");
        }
        if (args.serviceRoleArn === undefined) {
            throw new Error("Missing required property 'serviceRoleArn'");
        }
        if (args.targets === undefined) {
            throw new Error("Missing required property 'targets'");
        }
        if (args.taskArn === undefined) {
            throw new Error("Missing required property 'taskArn'");
        }
        if (args.taskType === undefined) {
            throw new Error("Missing required property 'taskType'");
        }
        if (args.windowId === undefined) {
            throw new Error("Missing required property 'windowId'");
        }
        super("aws:ssm/maintenanceWindowTask:MaintenanceWindowTask", urnName, {
            "loggingInfo": args.loggingInfo,
            "maxConcurrency": args.maxConcurrency,
            "maxErrors": args.maxErrors,
            "priority": args.priority,
            "serviceRoleArn": args.serviceRoleArn,
            "targets": args.targets,
            "taskArn": args.taskArn,
            "taskParameters": args.taskParameters,
            "taskType": args.taskType,
            "windowId": args.windowId,
        });
    }
}

export interface MaintenanceWindowTaskArgs {
    readonly loggingInfo?: fabric.PropertyValue<{ s3BucketName: fabric.PropertyValue<string>, s3BucketPrefix?: fabric.PropertyValue<string>, s3Region: fabric.PropertyValue<string> }>[];
    readonly maxConcurrency: fabric.PropertyValue<string>;
    readonly maxErrors: fabric.PropertyValue<string>;
    readonly priority?: fabric.PropertyValue<number>;
    readonly serviceRoleArn: fabric.PropertyValue<string>;
    readonly targets: fabric.PropertyValue<{ key: fabric.PropertyValue<string>, values: fabric.PropertyValue<fabric.PropertyValue<string>>[] }>[];
    readonly taskArn: fabric.PropertyValue<string>;
    readonly taskParameters?: fabric.PropertyValue<{ name: fabric.PropertyValue<string>, values: fabric.PropertyValue<fabric.PropertyValue<string>>[] }>[];
    readonly taskType: fabric.PropertyValue<string>;
    readonly windowId: fabric.PropertyValue<string>;
}

