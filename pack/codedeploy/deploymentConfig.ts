// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class DeploymentConfig extends lumi.NamedResource implements DeploymentConfigArgs {
    public /*out*/ readonly deploymentConfigId: string;
    public readonly deploymentConfigName: string;
    public readonly minimumHealthyHosts: { type: string, value?: number }[];

    constructor(name: string, args: DeploymentConfigArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.deploymentConfigName, "") === undefined) {
            throw new Error("Property argument 'deploymentConfigName' is required, but was missing");
        }
        this.deploymentConfigName = args.deploymentConfigName;
        if (lumirt.defaultIfComputed(args.minimumHealthyHosts, "") === undefined) {
            throw new Error("Property argument 'minimumHealthyHosts' is required, but was missing");
        }
        this.minimumHealthyHosts = args.minimumHealthyHosts;
    }
}

export interface DeploymentConfigArgs {
    readonly deploymentConfigName: string;
    readonly minimumHealthyHosts: { type: string, value?: number }[];
}

