// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class LogDestinationPolicy extends lumi.NamedResource implements LogDestinationPolicyArgs {
    public readonly accessPolicy: string;
    public readonly destinationName: string;

    public static get(id: lumi.ID): LogDestinationPolicy {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): LogDestinationPolicy[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: LogDestinationPolicyArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.accessPolicy, "") === undefined) {
            throw new Error("Property argument 'accessPolicy' is required, but was missing");
        }
        this.accessPolicy = args.accessPolicy;
        if (lumirt.defaultIfComputed(args.destinationName, "") === undefined) {
            throw new Error("Property argument 'destinationName' is required, but was missing");
        }
        this.destinationName = args.destinationName;
    }
}

export interface LogDestinationPolicyArgs {
    readonly accessPolicy: string;
    readonly destinationName: string;
}

