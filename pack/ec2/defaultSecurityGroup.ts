// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class DefaultSecurityGroup extends lumi.NamedResource implements DefaultSecurityGroupArgs {
    public readonly egress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], prefixListIds?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    public readonly ingress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    public /*out*/ readonly name: string;
    public /*out*/ readonly ownerId: string;
    public readonly tags?: {[key: string]: any};
    public readonly vpcId: string;

    public static get(id: lumi.ID): DefaultSecurityGroup {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): DefaultSecurityGroup[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: DefaultSecurityGroupArgs) {
        super(urnName);
        this.egress = <any>args.egress;
        this.ingress = <any>args.ingress;
        this.tags = <any>args.tags;
        this.vpcId = <any>args.vpcId;
    }
}

export interface DefaultSecurityGroupArgs {
    readonly egress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], prefixListIds?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    readonly ingress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    readonly tags?: {[key: string]: any};
    readonly vpcId?: string;
}

