// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class VpnConnection
        extends fabric.Resource implements VpnConnectionArgs {
    public readonly customerGatewayConfiguration: fabric.Property<string>;
    public readonly customerGatewayId: fabric.Property<string>;
    public readonly routes: fabric.Property<{ destinationCidrBlock: string, source: string, state: string }[]>;
    public readonly staticRoutesOnly: fabric.Property<boolean>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;
    public /*out*/ readonly tunnel1Address: fabric.Property<string>;
    public /*out*/ readonly tunnel1BgpAsn: fabric.Property<string>;
    public /*out*/ readonly tunnel1BgpHoldtime: fabric.Property<number>;
    public /*out*/ readonly tunnel1CgwInsideAddress: fabric.Property<string>;
    public /*out*/ readonly tunnel1PresharedKey: fabric.Property<string>;
    public /*out*/ readonly tunnel1VgwInsideAddress: fabric.Property<string>;
    public /*out*/ readonly tunnel2Address: fabric.Property<string>;
    public /*out*/ readonly tunnel2BgpAsn: fabric.Property<string>;
    public /*out*/ readonly tunnel2BgpHoldtime: fabric.Property<number>;
    public /*out*/ readonly tunnel2CgwInsideAddress: fabric.Property<string>;
    public /*out*/ readonly tunnel2PresharedKey: fabric.Property<string>;
    public /*out*/ readonly tunnel2VgwInsideAddress: fabric.Property<string>;
    public readonly type: fabric.Property<string>;
    public readonly vgwTelemetry: fabric.Property<{ acceptedRouteCount: number, lastStatusChange: string, outsideIpAddress: string, status: string, statusMessage: string }[]>;
    public readonly vpnGatewayId: fabric.Property<string>;

    constructor(urnName: string, args: VpnConnectionArgs) {
        if (args.customerGatewayId === undefined) {
            throw new Error("Missing required property 'customerGatewayId'");
        }
        if (args.type === undefined) {
            throw new Error("Missing required property 'type'");
        }
        if (args.vpnGatewayId === undefined) {
            throw new Error("Missing required property 'vpnGatewayId'");
        }
        super("aws:ec2/vpnConnection:VpnConnection", urnName, {
            "customerGatewayConfiguration": args.customerGatewayConfiguration,
            "customerGatewayId": args.customerGatewayId,
            "routes": args.routes,
            "staticRoutesOnly": args.staticRoutesOnly,
            "tags": args.tags,
            "type": args.type,
            "vgwTelemetry": args.vgwTelemetry,
            "vpnGatewayId": args.vpnGatewayId,
        });
    }
}

export interface VpnConnectionArgs {
    readonly customerGatewayConfiguration?: fabric.PropertyValue<string>;
    readonly customerGatewayId: fabric.PropertyValue<string>;
    readonly routes?: fabric.PropertyValue<{ destinationCidrBlock?: string, source?: string, state?: string }[]>;
    readonly staticRoutesOnly?: fabric.PropertyValue<boolean>;
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
    readonly type: fabric.PropertyValue<string>;
    readonly vgwTelemetry?: fabric.PropertyValue<{ acceptedRouteCount?: number, lastStatusChange?: string, outsideIpAddress?: string, status?: string, statusMessage?: string }[]>;
    readonly vpnGatewayId: fabric.PropertyValue<string>;
}

