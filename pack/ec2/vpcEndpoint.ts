// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class VpcEndpoint extends lumi.NamedResource implements VpcEndpointArgs {
    public /*out*/ readonly cidrBlocks: string[];
    public readonly policy: string;
    public /*out*/ readonly prefixListId: string;
    public readonly routeTableIds: string[];
    public readonly serviceName: string;
    public readonly vpcId: string;

    public static get(id: lumi.ID): VpcEndpoint {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): VpcEndpoint[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: VpcEndpointArgs) {
        super(urnName);
        this.policy = <any>args.policy;
        this.routeTableIds = <any>args.routeTableIds;
        if (lumirt.defaultIfComputed(args.serviceName, "") === undefined) {
            throw new Error("Property argument 'serviceName' is required, but was missing");
        }
        this.serviceName = <any>args.serviceName;
        if (lumirt.defaultIfComputed(args.vpcId, "") === undefined) {
            throw new Error("Property argument 'vpcId' is required, but was missing");
        }
        this.vpcId = <any>args.vpcId;
    }
}

export interface VpcEndpointArgs {
    readonly policy?: string;
    readonly routeTableIds?: string[];
    readonly serviceName: string;
    readonly vpcId: string;
}

