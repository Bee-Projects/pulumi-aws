// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Subnet extends lumi.NamedResource implements SubnetArgs {
    public readonly assignIpv6AddressOnCreation?: boolean;
    public readonly availabilityZone: string;
    public readonly cidrBlock: string;
    public readonly ipv6CidrBlock: string;
    public /*out*/ readonly ipv6CidrBlockAssociationId: string;
    public readonly mapPublicIpOnLaunch?: boolean;
    public readonly tags?: {[key: string]: any};
    public readonly vpcId: string;

    constructor(name: string, args: SubnetArgs) {
        super(name);
        this.assignIpv6AddressOnCreation = args.assignIpv6AddressOnCreation;
        this.availabilityZone = args.availabilityZone;
        if (lumirt.defaultIfComputed(args.cidrBlock, "") === undefined) {
            throw new Error("Property argument 'cidrBlock' is required, but was missing");
        }
        this.cidrBlock = args.cidrBlock;
        this.ipv6CidrBlock = args.ipv6CidrBlock;
        this.mapPublicIpOnLaunch = args.mapPublicIpOnLaunch;
        this.tags = args.tags;
        if (lumirt.defaultIfComputed(args.vpcId, "") === undefined) {
            throw new Error("Property argument 'vpcId' is required, but was missing");
        }
        this.vpcId = args.vpcId;
    }
}

export interface SubnetArgs {
    readonly assignIpv6AddressOnCreation?: boolean;
    readonly availabilityZone?: string;
    readonly cidrBlock: string;
    readonly ipv6CidrBlock?: string;
    readonly mapPublicIpOnLaunch?: boolean;
    readonly tags?: {[key: string]: any};
    readonly vpcId: string;
}

