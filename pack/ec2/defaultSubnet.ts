// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class DefaultSubnet extends lumi.NamedResource implements DefaultSubnetArgs {
    public /*out*/ readonly assignIpv6AddressOnCreation: boolean;
    public readonly availabilityZone: string;
    public /*out*/ readonly cidrBlock: string;
    public /*out*/ readonly ipv6CidrBlock: string;
    public /*out*/ readonly ipv6CidrBlockAssociationId: string;
    public /*out*/ readonly mapPublicIpOnLaunch: boolean;
    public readonly tags?: {[key: string]: any};
    public /*out*/ readonly vpcId: string;

    constructor(name: string, args: DefaultSubnetArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.availabilityZone, "") === undefined) {
            throw new Error("Property argument 'availabilityZone' is required, but was missing");
        }
        this.availabilityZone = args.availabilityZone;
        this.tags = args.tags;
    }
}

export interface DefaultSubnetArgs {
    readonly availabilityZone: string;
    readonly tags?: {[key: string]: any};
}

