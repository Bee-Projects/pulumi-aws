// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Ami extends lumi.NamedResource implements AmiArgs {
    public readonly architecture?: string;
    public readonly description?: string;
    public readonly ebsBlockDevice: { deleteOnTermination?: boolean, deviceName: string, encrypted?: boolean, iops?: number, snapshotId?: string, volumeSize: number, volumeType?: string }[];
    public readonly ephemeralBlockDevice: { deviceName: string, virtualName: string }[];
    public /*out*/ readonly amiId: string;
    public readonly imageLocation: string;
    public readonly kernelId?: string;
    public /*out*/ readonly manageEbsSnapshots: boolean;
    public readonly amiName?: string;
    public readonly ramdiskId?: string;
    public readonly rootDeviceName?: string;
    public readonly sriovNetSupport?: string;
    public readonly tags?: {[key: string]: any};
    public readonly virtualizationType?: string;

    constructor(name: string, args: AmiArgs) {
        super(name);
        this.architecture = args.architecture;
        this.description = args.description;
        this.ebsBlockDevice = args.ebsBlockDevice;
        this.ephemeralBlockDevice = args.ephemeralBlockDevice;
        this.imageLocation = args.imageLocation;
        this.kernelId = args.kernelId;
        this.amiName = args.amiName;
        this.ramdiskId = args.ramdiskId;
        this.rootDeviceName = args.rootDeviceName;
        this.sriovNetSupport = args.sriovNetSupport;
        this.tags = args.tags;
        this.virtualizationType = args.virtualizationType;
    }
}

export interface AmiArgs {
    readonly architecture?: string;
    readonly description?: string;
    readonly ebsBlockDevice?: { deleteOnTermination?: boolean, deviceName: string, encrypted?: boolean, iops?: number, snapshotId?: string, volumeSize: number, volumeType?: string }[];
    readonly ephemeralBlockDevice?: { deviceName: string, virtualName: string }[];
    readonly imageLocation?: string;
    readonly kernelId?: string;
    readonly amiName?: string;
    readonly ramdiskId?: string;
    readonly rootDeviceName?: string;
    readonly sriovNetSupport?: string;
    readonly tags?: {[key: string]: any};
    readonly virtualizationType?: string;
}

