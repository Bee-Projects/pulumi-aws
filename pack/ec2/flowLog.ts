// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class FlowLog extends lumi.NamedResource implements FlowLogArgs {
    public readonly eniId?: string;
    public readonly iamRoleArn: string;
    public readonly logGroupName: string;
    public readonly subnetId?: string;
    public readonly trafficType: string;
    public readonly vpcId?: string;

    public static get(id: lumi.ID): FlowLog {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): FlowLog[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: FlowLogArgs) {
        super(name);
        this.eniId = <any>args.eniId;
        if (lumirt.defaultIfComputed(args.iamRoleArn, "") === undefined) {
            throw new Error("Property argument 'iamRoleArn' is required, but was missing");
        }
        this.iamRoleArn = <any>args.iamRoleArn;
        if (lumirt.defaultIfComputed(args.logGroupName, "") === undefined) {
            throw new Error("Property argument 'logGroupName' is required, but was missing");
        }
        this.logGroupName = <any>args.logGroupName;
        this.subnetId = <any>args.subnetId;
        if (lumirt.defaultIfComputed(args.trafficType, "") === undefined) {
            throw new Error("Property argument 'trafficType' is required, but was missing");
        }
        this.trafficType = <any>args.trafficType;
        this.vpcId = <any>args.vpcId;
    }
}

export interface FlowLogArgs {
    readonly eniId?: string;
    readonly iamRoleArn: string;
    readonly logGroupName: string;
    readonly subnetId?: string;
    readonly trafficType: string;
    readonly vpcId?: string;
}

