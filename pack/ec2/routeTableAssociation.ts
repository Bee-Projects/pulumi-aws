// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class RouteTableAssociation extends lumi.NamedResource implements RouteTableAssociationArgs {
    public readonly routeTableId: string;
    public readonly subnetId: string;

    public static get(id: lumi.ID): RouteTableAssociation {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): RouteTableAssociation[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: RouteTableAssociationArgs) {
        super(urnName);
        if (lumirt.defaultIfComputed(args.routeTableId, "") === undefined) {
            throw new Error("Property argument 'routeTableId' is required, but was missing");
        }
        this.routeTableId = <any>args.routeTableId;
        if (lumirt.defaultIfComputed(args.subnetId, "") === undefined) {
            throw new Error("Property argument 'subnetId' is required, but was missing");
        }
        this.subnetId = <any>args.subnetId;
    }
}

export interface RouteTableAssociationArgs {
    readonly routeTableId: string;
    readonly subnetId: string;
}

