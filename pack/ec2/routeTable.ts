// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class RouteTable extends lumi.NamedResource implements RouteTableArgs {
    public readonly propagatingVgws: string[];
    public readonly route: { cidrBlock?: string, egressOnlyGatewayId?: string, gatewayId?: string, instanceId?: string, ipv6CidrBlock?: string, natGatewayId?: string, networkInterfaceId?: string, vpcPeeringConnectionId?: string }[];
    public readonly tags?: {[key: string]: any};
    public readonly vpcId: string;

    constructor(name: string, args: RouteTableArgs) {
        super(name);
        this.propagatingVgws = args.propagatingVgws;
        this.route = args.route;
        this.tags = args.tags;
        if (lumirt.defaultIfComputed(args.vpcId, "") === undefined) {
            throw new Error("Property argument 'vpcId' is required, but was missing");
        }
        this.vpcId = args.vpcId;
    }
}

export interface RouteTableArgs {
    readonly propagatingVgws?: string[];
    readonly route?: { cidrBlock?: string, egressOnlyGatewayId?: string, gatewayId?: string, instanceId?: string, ipv6CidrBlock?: string, natGatewayId?: string, networkInterfaceId?: string, vpcPeeringConnectionId?: string }[];
    readonly tags?: {[key: string]: any};
    readonly vpcId: string;
}

