// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class AmiCopy
        extends fabric.Resource implements AmiCopyArgs {
    public /*out*/ readonly architecture: fabric.Property<string>;
    public readonly description?: fabric.Property<string>;
    public readonly ebsBlockDevice: fabric.Property<{ deleteOnTermination: boolean, deviceName: string, encrypted: boolean, iops: number, snapshotId: string, volumeSize: number, volumeType: string }[]>;
    public readonly encrypted?: fabric.Property<boolean>;
    public readonly ephemeralBlockDevice: fabric.Property<{ deviceName: string, virtualName: string }[]>;
    public /*out*/ readonly amiId: fabric.Property<string>;
    public /*out*/ readonly imageLocation: fabric.Property<string>;
    public /*out*/ readonly kernelId: fabric.Property<string>;
    public readonly kmsKeyId: fabric.Property<string>;
    public /*out*/ readonly manageEbsSnapshots: fabric.Property<boolean>;
    public readonly name: fabric.Property<string>;
    public /*out*/ readonly ramdiskId: fabric.Property<string>;
    public /*out*/ readonly rootDeviceName: fabric.Property<string>;
    public readonly sourceAmiId: fabric.Property<string>;
    public readonly sourceAmiRegion: fabric.Property<string>;
    public /*out*/ readonly sriovNetSupport: fabric.Property<string>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;
    public /*out*/ readonly virtualizationType: fabric.Property<string>;

    constructor(urnName: string, args: AmiCopyArgs) {
        if (args.sourceAmiId === undefined) {
            throw new Error("Missing required property 'sourceAmiId'");
        }
        if (args.sourceAmiRegion === undefined) {
            throw new Error("Missing required property 'sourceAmiRegion'");
        }
        super("aws:ec2/amiCopy:AmiCopy", urnName, {
            "description": args.description,
            "ebsBlockDevice": args.ebsBlockDevice,
            "encrypted": args.encrypted,
            "ephemeralBlockDevice": args.ephemeralBlockDevice,
            "kmsKeyId": args.kmsKeyId,
            "name": args.name,
            "sourceAmiId": args.sourceAmiId,
            "sourceAmiRegion": args.sourceAmiRegion,
            "tags": args.tags,
        });
    }
}

export interface AmiCopyArgs {
    readonly description?: fabric.PropertyValue<string>;
    readonly ebsBlockDevice?: fabric.PropertyValue<{ deleteOnTermination?: boolean, deviceName?: string, encrypted?: boolean, iops?: number, snapshotId?: string, volumeSize?: number, volumeType?: string }[]>;
    readonly encrypted?: fabric.PropertyValue<boolean>;
    readonly ephemeralBlockDevice?: fabric.PropertyValue<{ deviceName?: string, virtualName?: string }[]>;
    readonly kmsKeyId?: fabric.PropertyValue<string>;
    readonly name?: fabric.PropertyValue<string>;
    readonly sourceAmiId: fabric.PropertyValue<string>;
    readonly sourceAmiRegion: fabric.PropertyValue<string>;
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
}

