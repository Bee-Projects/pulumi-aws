// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class VpcPeeringConnectionAccepter extends fabric.Resource {
    public /*out*/ readonly acceptStatus: fabric.Property<string>;
    public readonly accepter: fabric.Property<{ allowClassicLinkToRemoteVpc?: boolean, allowRemoteVpcDnsResolution?: boolean, allowVpcToRemoteClassicLink?: boolean }[]>;
    public readonly autoAccept?: fabric.Property<boolean>;
    public /*out*/ readonly peerOwnerId: fabric.Property<string>;
    public /*out*/ readonly peerVpcId: fabric.Property<string>;
    public readonly requester: fabric.Property<{ allowClassicLinkToRemoteVpc?: boolean, allowRemoteVpcDnsResolution?: boolean, allowVpcToRemoteClassicLink?: boolean }[]>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;
    public /*out*/ readonly vpcId: fabric.Property<string>;
    public readonly vpcPeeringConnectionId: fabric.Property<string>;

    constructor(urnName: string, args: VpcPeeringConnectionAccepterArgs) {
        if (args.vpcPeeringConnectionId === undefined) {
            throw new Error("Missing required property 'vpcPeeringConnectionId'");
        }
        super("aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter", urnName, {
            "accepter": args.accepter,
            "autoAccept": args.autoAccept,
            "requester": args.requester,
            "tags": args.tags,
            "vpcPeeringConnectionId": args.vpcPeeringConnectionId,
            "acceptStatus": undefined,
            "peerOwnerId": undefined,
            "peerVpcId": undefined,
            "vpcId": undefined,
        });
    }
}

export interface VpcPeeringConnectionAccepterArgs {
    readonly accepter?: fabric.PropertyValue<{ allowClassicLinkToRemoteVpc?: fabric.PropertyValue<boolean>, allowRemoteVpcDnsResolution?: fabric.PropertyValue<boolean>, allowVpcToRemoteClassicLink?: fabric.PropertyValue<boolean> }>[];
    readonly autoAccept?: fabric.PropertyValue<boolean>;
    readonly requester?: fabric.PropertyValue<{ allowClassicLinkToRemoteVpc?: fabric.PropertyValue<boolean>, allowRemoteVpcDnsResolution?: fabric.PropertyValue<boolean>, allowVpcToRemoteClassicLink?: fabric.PropertyValue<boolean> }>[];
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
    readonly vpcPeeringConnectionId: fabric.PropertyValue<string>;
}

