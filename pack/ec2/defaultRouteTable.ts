// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class DefaultRouteTable extends lumi.NamedResource implements DefaultRouteTableArgs {
    public readonly defaultRouteTableId: string;
    public readonly propagatingVgws?: string[];
    public readonly route: { cidrBlock?: string, egressOnlyGatewayId?: string, gatewayId?: string, instanceId?: string, ipv6CidrBlock?: string, natGatewayId?: string, networkInterfaceId?: string, vpcPeeringConnectionId?: string }[];
    public readonly tags?: {[key: string]: any};
    public /*out*/ readonly vpcId: string;

    public static get(id: lumi.ID): DefaultRouteTable {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): DefaultRouteTable[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: DefaultRouteTableArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.defaultRouteTableId, "") === undefined) {
            throw new Error("Property argument 'defaultRouteTableId' is required, but was missing");
        }
        this.defaultRouteTableId = <any>args.defaultRouteTableId;
        this.propagatingVgws = <any>args.propagatingVgws;
        this.route = <any>args.route;
        this.tags = <any>args.tags;
    }
}

export interface DefaultRouteTableArgs {
    readonly defaultRouteTableId: string;
    readonly propagatingVgws?: string[];
    readonly route?: { cidrBlock?: string, egressOnlyGatewayId?: string, gatewayId?: string, instanceId?: string, ipv6CidrBlock?: string, natGatewayId?: string, networkInterfaceId?: string, vpcPeeringConnectionId?: string }[];
    readonly tags?: {[key: string]: any};
}

