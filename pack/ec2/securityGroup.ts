// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class SecurityGroup extends lumi.NamedResource implements SecurityGroupArgs {
    public readonly description?: string;
    public readonly egress: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], prefixListIds?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    public readonly ingress: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    public readonly securityGroupName: string;
    public readonly namePrefix?: string;
    public /*out*/ readonly ownerId: string;
    public readonly tags?: {[key: string]: any};
    public readonly vpcId: string;

    public static get(id: lumi.ID): SecurityGroup {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): SecurityGroup[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: SecurityGroupArgs) {
        super(name);
        this.description = <any>args.description;
        this.egress = <any>args.egress;
        this.ingress = <any>args.ingress;
        this.securityGroupName = <any>args.securityGroupName;
        this.namePrefix = <any>args.namePrefix;
        this.tags = <any>args.tags;
        this.vpcId = <any>args.vpcId;
    }
}

export interface SecurityGroupArgs {
    readonly description?: string;
    readonly egress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], prefixListIds?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    readonly ingress?: { cidrBlocks?: string[], fromPort: number, ipv6CidrBlocks?: string[], protocol: string, securityGroups?: string[], self?: boolean, toPort: number }[];
    readonly securityGroupName?: string;
    readonly namePrefix?: string;
    readonly tags?: {[key: string]: any};
    readonly vpcId?: string;
}

