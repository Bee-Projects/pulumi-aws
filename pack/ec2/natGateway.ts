// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class NatGateway extends lumi.NamedResource implements NatGatewayArgs {
    public readonly allocationId: string;
    public readonly networkInterfaceId: string;
    public readonly privateIp: string;
    public readonly publicIp: string;
    public readonly subnetId: string;

    public static get(id: lumi.ID): NatGateway {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): NatGateway[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(urnName: string, args: NatGatewayArgs) {
        super(urnName);
        if (lumirt.defaultIfComputed(args.allocationId, "") === undefined) {
            throw new Error("Property argument 'allocationId' is required, but was missing");
        }
        this.allocationId = <any>args.allocationId;
        this.networkInterfaceId = <any>args.networkInterfaceId;
        this.privateIp = <any>args.privateIp;
        this.publicIp = <any>args.publicIp;
        if (lumirt.defaultIfComputed(args.subnetId, "") === undefined) {
            throw new Error("Property argument 'subnetId' is required, but was missing");
        }
        this.subnetId = <any>args.subnetId;
    }
}

export interface NatGatewayArgs {
    readonly allocationId: string;
    readonly networkInterfaceId?: string;
    readonly privateIp?: string;
    readonly publicIp?: string;
    readonly subnetId: string;
}

