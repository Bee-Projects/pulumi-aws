import * as lumi from "@lumi/lumi";
export declare class Cluster extends lumi.NamedResource implements ClusterArgs {
    readonly allowVersionUpgrade?: boolean;
    readonly automatedSnapshotRetentionPeriod?: number;
    readonly availabilityZone: string;
    readonly bucketName: string;
    readonly clusterIdentifier: string;
    readonly clusterParameterGroupName: string;
    readonly clusterPublicKey: string;
    readonly clusterRevisionNumber: string;
    readonly clusterSecurityGroups: string[];
    readonly clusterSubnetGroupName: string;
    readonly clusterType: string;
    readonly clusterVersion?: string;
    readonly databaseName: string;
    readonly elasticIp?: string;
    readonly enableLogging?: boolean;
    readonly encrypted: boolean;
    readonly endpoint: string;
    readonly enhancedVpcRouting: boolean;
    readonly finalSnapshotIdentifier?: string;
    readonly iamRoles: string[];
    readonly kmsKeyId: string;
    readonly masterPassword?: string;
    readonly masterUsername?: string;
    readonly nodeType: string;
    readonly numberOfNodes?: number;
    readonly ownerAccount?: string;
    readonly port?: number;
    readonly preferredMaintenanceWindow: string;
    readonly publiclyAccessible?: boolean;
    readonly s3KeyPrefix: string;
    readonly skipFinalSnapshot?: boolean;
    readonly snapshotClusterIdentifier?: string;
    readonly snapshotIdentifier?: string;
    readonly tags?: {
        [key: string]: any;
    };
    readonly vpcSecurityGroupIds: string[];
    constructor(name: string, args: ClusterArgs);
}
export interface ClusterArgs {
    readonly allowVersionUpgrade?: boolean;
    readonly automatedSnapshotRetentionPeriod?: number;
    readonly availabilityZone?: string;
    readonly bucketName?: string;
    readonly clusterIdentifier: string;
    readonly clusterParameterGroupName?: string;
    readonly clusterPublicKey?: string;
    readonly clusterRevisionNumber?: string;
    readonly clusterSecurityGroups?: string[];
    readonly clusterSubnetGroupName?: string;
    readonly clusterType?: string;
    readonly clusterVersion?: string;
    readonly databaseName?: string;
    readonly elasticIp?: string;
    readonly enableLogging?: boolean;
    readonly encrypted?: boolean;
    readonly endpoint?: string;
    readonly enhancedVpcRouting?: boolean;
    readonly finalSnapshotIdentifier?: string;
    readonly iamRoles?: string[];
    readonly kmsKeyId?: string;
    readonly masterPassword?: string;
    readonly masterUsername?: string;
    readonly nodeType: string;
    readonly numberOfNodes?: number;
    readonly ownerAccount?: string;
    readonly port?: number;
    readonly preferredMaintenanceWindow?: string;
    readonly publiclyAccessible?: boolean;
    readonly s3KeyPrefix?: string;
    readonly skipFinalSnapshot?: boolean;
    readonly snapshotClusterIdentifier?: string;
    readonly snapshotIdentifier?: string;
    readonly tags?: {
        [key: string]: any;
    };
    readonly vpcSecurityGroupIds?: string[];
}

