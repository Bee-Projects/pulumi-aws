// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "pulumi";

/**
 * The S3 object data source allows access to the metadata and
 * _optionally_ (see below) content of an object stored inside S3 bucket.
 * 
 * ~> **Note:** The content of an object (`body` field) is available only for objects which have a human-readable `Content-Type` (`text/*` and `application/json`). This is to prevent printing unsafe characters and potentially downloading large amount of data which would be thrown away in favour of metadata.
 */
export function getBucketObject(args: GetBucketObjectArgs): Promise<GetBucketObjectResult> {
    return pulumi.runtime.invoke("aws:s3/getBucketObject:getBucketObject", {
        "bucket": args.bucket,
        "key": args.key,
        "range": args.range,
        "tags": args.tags,
        "versionId": args.versionId,
    });
}

/**
 * A collection of arguments for invoking getBucketObject.
 */
export interface GetBucketObjectArgs {
    /**
     * The name of the bucket to read the object from
     */
    bucket: pulumi.ComputedValue<string>;
    /**
     * The full path to the object inside the bucket
     */
    key: pulumi.ComputedValue<string>;
    range?: pulumi.ComputedValue<string>;
    tags?: pulumi.ComputedValue<{[key: string]: any}>;
    /**
     * Specific version ID of the object returned (defaults to latest version)
     */
    versionId?: pulumi.ComputedValue<string>;
}

/**
 * A collection of values returned by getBucketObject.
 */
export interface GetBucketObjectResult {
    /**
     * Object data (see **limitations above** to understand cases in which this field is actually available)
     */
    body: string;
    /**
     * Specifies caching behavior along the request/reply chain.
     */
    cacheControl: string;
    /**
     * Specifies presentational information for the object.
     */
    contentDisposition: string;
    /**
     * Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
     */
    contentEncoding: string;
    /**
     * The language the content is in.
     */
    contentLanguage: string;
    /**
     * Size of the body in bytes.
     */
    contentLength: number;
    /**
     * A standard MIME type describing the format of the object data.
     */
    contentType: string;
    /**
     * [ETag](https://en.wikipedia.org/wiki/HTTP_ETag) generated for the object (an MD5 sum of the object content in case it's not encrypted)
     */
    etag: string;
    /**
     * If the object expiration is configured (see [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html)), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.
     */
    expiration: string;
    /**
     * The date and time at which the object is no longer cacheable.
     */
    expires: string;
    /**
     * Last modified date of the object in RFC1123 format (e.g. `Mon, 02 Jan 2006 15:04:05 MST`)
     */
    lastModified: string;
    /**
     * A map of metadata stored with the object in S3
     */
    metadata: {[key: string]: any};
    /**
     * If the object is stored using server-side encryption (KMS or Amazon S3-managed encryption key), this field includes the chosen encryption and algorithm used.
     */
    serverSideEncryption: string;
    /**
     * If present, specifies the ID of the Key Management Service (KMS) master encryption key that was used for the object.
     */
    sseKmsKeyId: string;
    /**
     * [Storage class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) information of the object. Available for all objects except for `Standard` storage class objects.
     */
    storageClass: string;
    /**
     * A mapping of tags assigned to the object.
     */
    tags: {[key: string]: any};
    /**
     * The latest version ID of the object returned.
     */
    versionId: string;
    /**
     * If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.
     */
    websiteRedirectLocation: string;
}

