// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

import {Bucket} from "./bucket";

export class S3Object extends fabric.Resource {
    public readonly acl?: fabric.Property<string>;
    public readonly bucket: fabric.Property<Bucket>;
    public readonly cacheControl?: fabric.Property<string>;
    public readonly content?: fabric.Property<string>;
    public readonly contentDisposition?: fabric.Property<string>;
    public readonly contentEncoding?: fabric.Property<string>;
    public readonly contentLanguage?: fabric.Property<string>;
    public readonly contentType: fabric.Property<string>;
    public readonly etag: fabric.Property<string>;
    public readonly key: fabric.Property<string>;
    public readonly kmsKeyId?: fabric.Property<string>;
    public readonly serverSideEncryption: fabric.Property<string>;
    public readonly source?: fabric.Property<fabric.asset.Asset>;
    public readonly storageClass: fabric.Property<string>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;
    public /*out*/ readonly versionId: fabric.Property<string>;
    public readonly websiteRedirect?: fabric.Property<string>;

    constructor(urnName: string, args: S3ObjectArgs) {
        if (args.bucket === undefined) {
            throw new Error("Missing required property 'bucket'");
        }
        super("aws:s3/s3Object:S3Object", urnName, {
            "acl": args.acl,
            "bucket": args.bucket,
            "cacheControl": args.cacheControl,
            "content": args.content,
            "contentDisposition": args.contentDisposition,
            "contentEncoding": args.contentEncoding,
            "contentLanguage": args.contentLanguage,
            "contentType": args.contentType,
            "etag": args.etag,
            "key": args.key,
            "kmsKeyId": args.kmsKeyId,
            "serverSideEncryption": args.serverSideEncryption,
            "source": args.source,
            "storageClass": args.storageClass,
            "tags": args.tags,
            "websiteRedirect": args.websiteRedirect,
        });
    }
}

export interface S3ObjectArgs {
    readonly acl?: fabric.PropertyValue<string>;
    readonly bucket: fabric.PropertyValue<Bucket>;
    readonly cacheControl?: fabric.PropertyValue<string>;
    readonly content?: fabric.PropertyValue<string>;
    readonly contentDisposition?: fabric.PropertyValue<string>;
    readonly contentEncoding?: fabric.PropertyValue<string>;
    readonly contentLanguage?: fabric.PropertyValue<string>;
    readonly contentType?: fabric.PropertyValue<string>;
    readonly etag?: fabric.PropertyValue<string>;
    readonly key?: fabric.PropertyValue<string>;
    readonly kmsKeyId?: fabric.PropertyValue<string>;
    readonly serverSideEncryption?: fabric.PropertyValue<string>;
    readonly source?: fabric.asset.Asset;
    readonly storageClass?: fabric.PropertyValue<string>;
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
    readonly websiteRedirect?: fabric.PropertyValue<string>;
}

