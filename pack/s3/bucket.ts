// *** WARNING: this file was generated by the Pulumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fabric from "@pulumi/pulumi-fabric";

export class Bucket
        extends fabric.Resource implements BucketArgs {
    public readonly accelerationStatus: fabric.Property<string>;
    public readonly acl?: fabric.Property<string>;
    public readonly arn: fabric.Property<string>;
    public readonly bucket: fabric.Property<string>;
    public /*out*/ readonly bucketDomainName: fabric.Property<string>;
    public readonly bucketPrefix?: fabric.Property<string>;
    public readonly corsRule?: fabric.Property<{ allowedHeaders?: string[], allowedMethods: string[], allowedOrigins: string[], exposeHeaders?: string[], maxAgeSeconds?: number }[]>;
    public readonly forceDestroy?: fabric.Property<boolean>;
    public readonly hostedZoneId: fabric.Property<string>;
    public readonly lifecycleRule?: fabric.Property<{ abortIncompleteMultipartUploadDays?: number, enabled: boolean, expiration?: { date?: string, days?: number, expiredObjectDeleteMarker?: boolean }[], id: string, noncurrentVersionExpiration?: { days?: number }[], noncurrentVersionTransition?: { days?: number, storageClass: string }[], prefix?: string, tags?: {[key: string]: any}, transition?: { date?: string, days?: number, storageClass: string }[] }[]>;
    public readonly logging?: fabric.Property<{ targetBucket: string, targetPrefix?: string }[]>;
    public readonly policy?: fabric.Property<string>;
    public readonly region: fabric.Property<string>;
    public readonly replicationConfiguration?: fabric.Property<{ role: string, rules: { destination: { bucket: string, storageClass?: string }[], id?: string, prefix: string, status: string }[] }[]>;
    public readonly requestPayer: fabric.Property<string>;
    public readonly tags?: fabric.Property<{[key: string]: any}>;
    public readonly versioning: fabric.Property<{ enabled?: boolean, mfaDelete?: boolean }[]>;
    public readonly website?: fabric.Property<{ errorDocument?: string, indexDocument?: string, redirectAllRequestsTo?: string, routingRules?: string }[]>;
    public readonly websiteDomain: fabric.Property<string>;
    public readonly websiteEndpoint: fabric.Property<string>;

    constructor(urnName: string, args: BucketArgs) {
        super("aws:s3/bucket:Bucket", urnName, {
            "accelerationStatus": args.accelerationStatus,
            "acl": args.acl,
            "arn": args.arn,
            "bucket": args.bucket,
            "bucketPrefix": args.bucketPrefix,
            "corsRule": args.corsRule,
            "forceDestroy": args.forceDestroy,
            "hostedZoneId": args.hostedZoneId,
            "lifecycleRule": args.lifecycleRule,
            "logging": args.logging,
            "policy": args.policy,
            "region": args.region,
            "replicationConfiguration": args.replicationConfiguration,
            "requestPayer": args.requestPayer,
            "tags": args.tags,
            "versioning": args.versioning,
            "website": args.website,
            "websiteDomain": args.websiteDomain,
            "websiteEndpoint": args.websiteEndpoint,
        });
    }
}

export interface BucketArgs {
    readonly accelerationStatus?: fabric.PropertyValue<string>;
    readonly acl?: fabric.PropertyValue<string>;
    readonly arn?: fabric.PropertyValue<string>;
    readonly bucket?: fabric.PropertyValue<string>;
    readonly bucketPrefix?: fabric.PropertyValue<string>;
    readonly corsRule?: fabric.PropertyValue<{ allowedHeaders?: string[], allowedMethods: string[], allowedOrigins: string[], exposeHeaders?: string[], maxAgeSeconds?: number }[]>;
    readonly forceDestroy?: fabric.PropertyValue<boolean>;
    readonly hostedZoneId?: fabric.PropertyValue<string>;
    readonly lifecycleRule?: fabric.PropertyValue<{ abortIncompleteMultipartUploadDays?: number, enabled: boolean, expiration?: { date?: string, days?: number, expiredObjectDeleteMarker?: boolean }[], id?: string, noncurrentVersionExpiration?: { days?: number }[], noncurrentVersionTransition?: { days?: number, storageClass: string }[], prefix?: string, tags?: {[key: string]: any}, transition?: { date?: string, days?: number, storageClass: string }[] }[]>;
    readonly logging?: fabric.PropertyValue<{ targetBucket: string, targetPrefix?: string }[]>;
    readonly policy?: fabric.PropertyValue<string>;
    readonly region?: fabric.PropertyValue<string>;
    readonly replicationConfiguration?: fabric.PropertyValue<{ role: string, rules: { destination: { bucket: string, storageClass?: string }[], id?: string, prefix: string, status: string }[] }[]>;
    readonly requestPayer?: fabric.PropertyValue<string>;
    readonly tags?: fabric.PropertyValue<{[key: string]: any}>;
    readonly versioning?: fabric.PropertyValue<{ enabled?: boolean, mfaDelete?: boolean }[]>;
    readonly website?: fabric.PropertyValue<{ errorDocument?: string, indexDocument?: string, redirectAllRequestsTo?: string, routingRules?: string }[]>;
    readonly websiteDomain?: fabric.PropertyValue<string>;
    readonly websiteEndpoint?: fabric.PropertyValue<string>;
}

