// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class EventSourceMapping extends lumi.NamedResource implements EventSourceMappingArgs {
    public readonly batchSize?: number;
    public readonly enabled?: boolean;
    public readonly eventSourceArn: string;
    public /*out*/ readonly functionArn: string;
    public readonly functionName: string;
    public /*out*/ readonly lastModified: string;
    public /*out*/ readonly lastProcessingResult: string;
    public readonly startingPosition: string;
    public /*out*/ readonly state: string;
    public /*out*/ readonly stateTransitionReason: string;
    public /*out*/ readonly uuid: string;

    constructor(name: string, args: EventSourceMappingArgs) {
        super(name);
        this.batchSize = args.batchSize;
        this.enabled = args.enabled;
        if (lumirt.defaultIfComputed(args.eventSourceArn, "") === undefined) {
            throw new Error("Property argument 'eventSourceArn' is required, but was missing");
        }
        this.eventSourceArn = args.eventSourceArn;
        if (lumirt.defaultIfComputed(args.functionName, "") === undefined) {
            throw new Error("Property argument 'functionName' is required, but was missing");
        }
        this.functionName = args.functionName;
        if (lumirt.defaultIfComputed(args.startingPosition, "") === undefined) {
            throw new Error("Property argument 'startingPosition' is required, but was missing");
        }
        this.startingPosition = args.startingPosition;
    }
}

export interface EventSourceMappingArgs {
    readonly batchSize?: number;
    readonly enabled?: boolean;
    readonly eventSourceArn: string;
    readonly functionName: string;
    readonly startingPosition: string;
}

